
USBF4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013bc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f8  0800156c  0800156c  0001156c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001664  08001664  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08001664  08001664  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001664  08001664  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001664  08001664  00011664  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001668  08001668  00011668  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  0800166c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000068  080016d4  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080016d4  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001a53  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000060c  00000000  00000000  00021aeb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000120  00000000  00000000  000220f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000c8  00000000  00000000  00022218  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000141a  00000000  00000000  000222e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001ccd  00000000  00000000  000236fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00097620  00000000  00000000  000253c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000bc9e7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b28  00000000  00000000  000bca64  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stab         00000084  00000000  00000000  000bd58c  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000117  00000000  00000000  000bd610  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000068 	.word	0x20000068
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001554 	.word	0x08001554

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000006c 	.word	0x2000006c
 80001ec:	08001554 	.word	0x08001554

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <USB_Gpio_Init>:
 *      Author: Avinash J
 */
#include "stm32F429_usb_driver.h"

void USB_Gpio_Init()
{
 8000290:	b480      	push	{r7}
 8000292:	af00      	add	r7, sp, #0
	//Enable clock for GPIOB
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);
 8000294:	4b0d      	ldr	r3, [pc, #52]	; (80002cc <USB_Gpio_Init+0x3c>)
 8000296:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000298:	4a0c      	ldr	r2, [pc, #48]	; (80002cc <USB_Gpio_Init+0x3c>)
 800029a:	f043 0302 	orr.w	r3, r3, #2
 800029e:	6313      	str	r3, [r2, #48]	; 0x30


	//Configure Alternate function for pin 14 and 15
	MODIFY_REG(GPIOB->AFR[1],
 80002a0:	4b0b      	ldr	r3, [pc, #44]	; (80002d0 <USB_Gpio_Init+0x40>)
 80002a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80002a4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80002a8:	4a09      	ldr	r2, [pc, #36]	; (80002d0 <USB_Gpio_Init+0x40>)
 80002aa:	f043 434c 	orr.w	r3, r3, #3422552064	; 0xcc000000
 80002ae:	6253      	str	r3, [r2, #36]	; 0x24
			GPIO_AFRH_AFSEL14 | GPIO_AFRH_AFSEL15,
			_VAL2FLD(GPIO_AFRH_AFSEL14, 0xC) | _VAL2FLD(GPIO_AFRH_AFSEL15, 0xC));


	//Configure pin as alternate mode
	MODIFY_REG(GPIOB->MODER,
 80002b0:	4b07      	ldr	r3, [pc, #28]	; (80002d0 <USB_Gpio_Init+0x40>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80002b8:	4a05      	ldr	r2, [pc, #20]	; (80002d0 <USB_Gpio_Init+0x40>)
 80002ba:	f043 4320 	orr.w	r3, r3, #2684354560	; 0xa0000000
 80002be:	6013      	str	r3, [r2, #0]
			GPIO_MODER_MODER14 | GPIO_MODER_MODER15,
			_VAL2FLD(GPIO_MODER_MODER14, 2) | _VAL2FLD(GPIO_MODER_MODER15, 2));


}
 80002c0:	bf00      	nop
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	40023800 	.word	0x40023800
 80002d0:	40020400 	.word	0x40020400

080002d4 <USB_Core_Init>:
 void USB_Core_Init()
{
 80002d4:	b480      	push	{r7}
 80002d6:	af00      	add	r7, sp, #0
	 //Enable peripheral clock to USB module
	 SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_OTGHSEN);
 80002d8:	4b19      	ldr	r3, [pc, #100]	; (8000340 <USB_Core_Init+0x6c>)
 80002da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002dc:	4a18      	ldr	r2, [pc, #96]	; (8000340 <USB_Core_Init+0x6c>)
 80002de:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80002e2:	6313      	str	r3, [r2, #48]	; 0x30

	 //Initialize the core to run in device mode
	 MODIFY_REG(USB_OTG_HS->GUSBCFG,
 80002e4:	4b17      	ldr	r3, [pc, #92]	; (8000344 <USB_Core_Init+0x70>)
 80002e6:	68db      	ldr	r3, [r3, #12]
 80002e8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80002ec:	f423 5371 	bic.w	r3, r3, #15424	; 0x3c40
 80002f0:	4a14      	ldr	r2, [pc, #80]	; (8000344 <USB_Core_Init+0x70>)
 80002f2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80002f6:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 80002fa:	60d3      	str	r3, [r2, #12]
	 		USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | USB_OTG_GUSBCFG_TRDT,
	 		USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | _VAL2FLD(USB_OTG_GUSBCFG_TRDT, 0x09));


	 //Initialize USB Speed to run at Full Speed
	 MODIFY_REG(USB_OTG_HS_DEVICE->DCFG,
 80002fc:	4b12      	ldr	r3, [pc, #72]	; (8000348 <USB_Core_Init+0x74>)
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	4a11      	ldr	r2, [pc, #68]	; (8000348 <USB_Core_Init+0x74>)
 8000302:	f043 0303 	orr.w	r3, r3, #3
 8000306:	6013      	str	r3, [r2, #0]
	 		USB_OTG_DCFG_DSPD,
	 		_VAL2FLD(USB_OTG_DCFG_DSPD, 0x03));


	 //Enable VBUS sensing device
	 SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_VBUSBSEN);
 8000308:	4b0e      	ldr	r3, [pc, #56]	; (8000344 <USB_Core_Init+0x70>)
 800030a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800030c:	4a0d      	ldr	r2, [pc, #52]	; (8000344 <USB_Core_Init+0x70>)
 800030e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000312:	6393      	str	r3, [r2, #56]	; 0x38

	 // Unmasks the main USB core interrupts.
	 SET_BIT(USB_OTG_HS->GINTMSK,
 8000314:	4b0b      	ldr	r3, [pc, #44]	; (8000344 <USB_Core_Init+0x70>)
 8000316:	699a      	ldr	r2, [r3, #24]
 8000318:	490a      	ldr	r1, [pc, #40]	; (8000344 <USB_Core_Init+0x70>)
 800031a:	4b0c      	ldr	r3, [pc, #48]	; (800034c <USB_Core_Init+0x78>)
 800031c:	4313      	orrs	r3, r2
 800031e:	618b      	str	r3, [r1, #24]
	 		USB_OTG_GINTMSK_USBRST | USB_OTG_GINTMSK_ENUMDNEM | USB_OTG_GINTMSK_SOFM |
	 		USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_WUIM | USB_OTG_GINTMSK_IEPINT |
	 		USB_OTG_GINTSTS_OEPINT | USB_OTG_GINTMSK_RXFLVLM);

	 	// Clears all pending core interrupts.
	 WRITE_REG(USB_OTG_HS->GINTSTS, 0xFFFFFFFF);
 8000320:	4b08      	ldr	r3, [pc, #32]	; (8000344 <USB_Core_Init+0x70>)
 8000322:	f04f 32ff 	mov.w	r2, #4294967295
 8000326:	615a      	str	r2, [r3, #20]

	 // Unmasks USB global interrupt.
	 SET_BIT(USB_OTG_HS->GAHBCFG, USB_OTG_GAHBCFG_GINT);
 8000328:	4b06      	ldr	r3, [pc, #24]	; (8000344 <USB_Core_Init+0x70>)
 800032a:	689b      	ldr	r3, [r3, #8]
 800032c:	4a05      	ldr	r2, [pc, #20]	; (8000344 <USB_Core_Init+0x70>)
 800032e:	f043 0301 	orr.w	r3, r3, #1
 8000332:	6093      	str	r3, [r2, #8]
//	 //Clear pending interrupts
//	 WRITE_REG(USB_OTG_HS->GINTSTS,0xFFFFFFFF);
//
//	 //Enable USB global interrupt
//	 SET_BIT(USB_OTG_HS->GAHBCFG,USB_OTG_GAHBCFG_GINT);
}
 8000334:	bf00      	nop
 8000336:	46bd      	mov	sp, r7
 8000338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800033c:	4770      	bx	lr
 800033e:	bf00      	nop
 8000340:	40023800 	.word	0x40023800
 8000344:	40040000 	.word	0x40040000
 8000348:	40040800 	.word	0x40040800
 800034c:	800c3818 	.word	0x800c3818

08000350 <connect>:

 void connect()
 {
 8000350:	b480      	push	{r7}
 8000352:	af00      	add	r7, sp, #0
	 //Power the transceiver on
	 SET_BIT(USB_OTG_HS->GCCFG,USB_OTG_GCCFG_PWRDWN);
 8000354:	4b08      	ldr	r3, [pc, #32]	; (8000378 <connect+0x28>)
 8000356:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000358:	4a07      	ldr	r2, [pc, #28]	; (8000378 <connect+0x28>)
 800035a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800035e:	6393      	str	r3, [r2, #56]	; 0x38

	 //Connect the device to the bus
	 CLEAR_BIT(USB_OTG_HS_DEVICE->DCTL,USB_OTG_DCTL_SDIS);
 8000360:	4b06      	ldr	r3, [pc, #24]	; (800037c <connect+0x2c>)
 8000362:	685b      	ldr	r3, [r3, #4]
 8000364:	4a05      	ldr	r2, [pc, #20]	; (800037c <connect+0x2c>)
 8000366:	f023 0302 	bic.w	r3, r3, #2
 800036a:	6053      	str	r3, [r2, #4]
 }
 800036c:	bf00      	nop
 800036e:	46bd      	mov	sp, r7
 8000370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000374:	4770      	bx	lr
 8000376:	bf00      	nop
 8000378:	40040000 	.word	0x40040000
 800037c:	40040800 	.word	0x40040800

08000380 <USB_Init>:
 */

#include "stm32F429_usb_framework.h"

void USB_Init()
{
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
	USB_Gpio_Init();
 8000384:	f7ff ff84 	bl	8000290 <USB_Gpio_Init>
	USB_Core_Init();
 8000388:	f7ff ffa4 	bl	80002d4 <USB_Core_Init>
	connect();
 800038c:	f7ff ffe0 	bl	8000350 <connect>

}
 8000390:	bf00      	nop
 8000392:	bd80      	pop	{r7, pc}

08000394 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000394:	b480      	push	{r7}
 8000396:	b083      	sub	sp, #12
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800039c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003a0:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80003a4:	f003 0301 	and.w	r3, r3, #1
 80003a8:	2b00      	cmp	r3, #0
 80003aa:	d013      	beq.n	80003d4 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80003ac:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003b0:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80003b4:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	d00b      	beq.n	80003d4 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80003bc:	e000      	b.n	80003c0 <ITM_SendChar+0x2c>
    {
      __NOP();
 80003be:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80003c0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	2b00      	cmp	r3, #0
 80003c8:	d0f9      	beq.n	80003be <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80003ca:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003ce:	687a      	ldr	r2, [r7, #4]
 80003d0:	b2d2      	uxtb	r2, r2
 80003d2:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80003d4:	687b      	ldr	r3, [r7, #4]
}
 80003d6:	4618      	mov	r0, r3
 80003d8:	370c      	adds	r7, #12
 80003da:	46bd      	mov	sp, r7
 80003dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e0:	4770      	bx	lr

080003e2 <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80003e2:	b580      	push	{r7, lr}
 80003e4:	b086      	sub	sp, #24
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	60f8      	str	r0, [r7, #12]
 80003ea:	60b9      	str	r1, [r7, #8]
 80003ec:	607a      	str	r2, [r7, #4]
  int i=0;
 80003ee:	2300      	movs	r3, #0
 80003f0:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80003f2:	2300      	movs	r3, #0
 80003f4:	617b      	str	r3, [r7, #20]
 80003f6:	e009      	b.n	800040c <_write+0x2a>
    ITM_SendChar((*ptr++));
 80003f8:	68bb      	ldr	r3, [r7, #8]
 80003fa:	1c5a      	adds	r2, r3, #1
 80003fc:	60ba      	str	r2, [r7, #8]
 80003fe:	781b      	ldrb	r3, [r3, #0]
 8000400:	4618      	mov	r0, r3
 8000402:	f7ff ffc7 	bl	8000394 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000406:	697b      	ldr	r3, [r7, #20]
 8000408:	3301      	adds	r3, #1
 800040a:	617b      	str	r3, [r7, #20]
 800040c:	697a      	ldr	r2, [r7, #20]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	429a      	cmp	r2, r3
 8000412:	dbf1      	blt.n	80003f8 <_write+0x16>

  return len;
 8000414:	687b      	ldr	r3, [r7, #4]
}
 8000416:	4618      	mov	r0, r3
 8000418:	3718      	adds	r7, #24
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}
	...

08000420 <_get_log_level_string>:

char const * const _get_log_level_string(LogLvl const log_level)
{
 8000420:	b480      	push	{r7}
 8000422:	b083      	sub	sp, #12
 8000424:	af00      	add	r7, sp, #0
 8000426:	4603      	mov	r3, r0
 8000428:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 800042a:	79fb      	ldrb	r3, [r7, #7]
 800042c:	2b01      	cmp	r3, #1
 800042e:	d005      	beq.n	800043c <_get_log_level_string+0x1c>
 8000430:	2b02      	cmp	r3, #2
 8000432:	d005      	beq.n	8000440 <_get_log_level_string+0x20>
 8000434:	2b00      	cmp	r3, #0
 8000436:	d105      	bne.n	8000444 <_get_log_level_string+0x24>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 8000438:	4b06      	ldr	r3, [pc, #24]	; (8000454 <_get_log_level_string+0x34>)
 800043a:	e004      	b.n	8000446 <_get_log_level_string+0x26>
        case LOG_LEVEL_INFO:
            return "INFO";
 800043c:	4b06      	ldr	r3, [pc, #24]	; (8000458 <_get_log_level_string+0x38>)
 800043e:	e002      	b.n	8000446 <_get_log_level_string+0x26>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000440:	4b06      	ldr	r3, [pc, #24]	; (800045c <_get_log_level_string+0x3c>)
 8000442:	e000      	b.n	8000446 <_get_log_level_string+0x26>
        default:
        	return "No Arg";
 8000444:	4b06      	ldr	r3, [pc, #24]	; (8000460 <_get_log_level_string+0x40>)
    }
}
 8000446:	4618      	mov	r0, r3
 8000448:	370c      	adds	r7, #12
 800044a:	46bd      	mov	sp, r7
 800044c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000450:	4770      	bx	lr
 8000452:	bf00      	nop
 8000454:	0800156c 	.word	0x0800156c
 8000458:	08001574 	.word	0x08001574
 800045c:	0800157c 	.word	0x0800157c
 8000460:	08001584 	.word	0x08001584

08000464 <_log>:

static void _log(LogLvl const log_level, char const * const format, va_list args)
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b084      	sub	sp, #16
 8000468:	af00      	add	r7, sp, #0
 800046a:	4603      	mov	r3, r0
 800046c:	60b9      	str	r1, [r7, #8]
 800046e:	607a      	str	r2, [r7, #4]
 8000470:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 8000472:	4b0f      	ldr	r3, [pc, #60]	; (80004b0 <_log+0x4c>)
 8000474:	781b      	ldrb	r3, [r3, #0]
 8000476:	7bfa      	ldrb	r2, [r7, #15]
 8000478:	429a      	cmp	r2, r3
 800047a:	d814      	bhi.n	80004a6 <_log+0x42>
    {
    	return;
    }


	printf("[%s] ", _get_log_level_string(log_level));
 800047c:	7bfb      	ldrb	r3, [r7, #15]
 800047e:	4618      	mov	r0, r3
 8000480:	f7ff ffce 	bl	8000420 <_get_log_level_string>
 8000484:	4603      	mov	r3, r0
 8000486:	4619      	mov	r1, r3
 8000488:	480a      	ldr	r0, [pc, #40]	; (80004b4 <_log+0x50>)
 800048a:	f000 fbc7 	bl	8000c1c <iprintf>
	vfprintf(stdout, format, args);
 800048e:	4b0a      	ldr	r3, [pc, #40]	; (80004b8 <_log+0x54>)
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	689b      	ldr	r3, [r3, #8]
 8000494:	687a      	ldr	r2, [r7, #4]
 8000496:	68b9      	ldr	r1, [r7, #8]
 8000498:	4618      	mov	r0, r3
 800049a:	f000 fa2d 	bl	80008f8 <vfiprintf>
	printf("\n");
 800049e:	200a      	movs	r0, #10
 80004a0:	f000 fbd4 	bl	8000c4c <putchar>
 80004a4:	e000      	b.n	80004a8 <_log+0x44>
    	return;
 80004a6:	bf00      	nop
}
 80004a8:	3710      	adds	r7, #16
 80004aa:	46bd      	mov	sp, r7
 80004ac:	bd80      	pop	{r7, pc}
 80004ae:	bf00      	nop
 80004b0:	20000000 	.word	0x20000000
 80004b4:	0800158c 	.word	0x0800158c
 80004b8:	20000004 	.word	0x20000004

080004bc <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 80004bc:	b40f      	push	{r0, r1, r2, r3}
 80004be:	b580      	push	{r7, lr}
 80004c0:	b082      	sub	sp, #8
 80004c2:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80004c4:	f107 0314 	add.w	r3, r7, #20
 80004c8:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFO, format, args);
 80004ca:	687a      	ldr	r2, [r7, #4]
 80004cc:	6939      	ldr	r1, [r7, #16]
 80004ce:	2001      	movs	r0, #1
 80004d0:	f7ff ffc8 	bl	8000464 <_log>
    va_end(args);
}
 80004d4:	bf00      	nop
 80004d6:	3708      	adds	r7, #8
 80004d8:	46bd      	mov	sp, r7
 80004da:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80004de:	b004      	add	sp, #16
 80004e0:	4770      	bx	lr
	...

080004e4 <main>:

#include "logger.h"
#include "stm32F429_usb_framework.h"

int main(void)
{
 80004e4:	b580      	push	{r7, lr}
 80004e6:	af00      	add	r7, sp, #0

	USBPins.GPIO_PinConfig.GPIO_PinNumber =12;
	GPIO_Init(&USBPins);*/


	USB_Init();
 80004e8:	f7ff ff4a 	bl	8000380 <USB_Init>
	log_info("Program entry point.");
 80004ec:	4801      	ldr	r0, [pc, #4]	; (80004f4 <main+0x10>)
 80004ee:	f7ff ffe5 	bl	80004bc <log_info>

	for(;;);
 80004f2:	e7fe      	b.n	80004f2 <main+0xe>
 80004f4:	080015b4 	.word	0x080015b4

080004f8 <configureClock>:
//HCLK = 72MHz
//PLL: M = 4, N = 72, P = 2, Q = 3
//APB1 prescaler =2 APB2 prescaler  = 1

static void configureClock(void)
{
 80004f8:	b480      	push	{r7}
 80004fa:	af00      	add	r7, sp, #0

	MODIFY_REG(FLASH->ACR,FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos);
 80004fc:	4b2c      	ldr	r3, [pc, #176]	; (80005b0 <configureClock+0xb8>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	f023 030f 	bic.w	r3, r3, #15
 8000504:	4a2a      	ldr	r2, [pc, #168]	; (80005b0 <configureClock+0xb8>)
 8000506:	f043 0302 	orr.w	r3, r3, #2
 800050a:	6013      	str	r3, [r2, #0]

	//Enable HSE
	SET_BIT(RCC->CR,RCC_CR_HSEON);
 800050c:	4b29      	ldr	r3, [pc, #164]	; (80005b4 <configureClock+0xbc>)
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	4a28      	ldr	r2, [pc, #160]	; (80005b4 <configureClock+0xbc>)
 8000512:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000516:	6013      	str	r3, [r2, #0]

	//Wait for HSE to be ready
	while(!READ_BIT(RCC->CR,RCC_CR_HSERDY));
 8000518:	bf00      	nop
 800051a:	4b26      	ldr	r3, [pc, #152]	; (80005b4 <configureClock+0xbc>)
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000522:	2b00      	cmp	r3, #0
 8000524:	d0f9      	beq.n	800051a <configureClock+0x22>

	//Turn off PLL
	CLEAR_BIT(RCC->CR,RCC_CR_PLLON);
 8000526:	4b23      	ldr	r3, [pc, #140]	; (80005b4 <configureClock+0xbc>)
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a22      	ldr	r2, [pc, #136]	; (80005b4 <configureClock+0xbc>)
 800052c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000530:	6013      	str	r3, [r2, #0]

	//Wait for PLL to be ready be cleared
	while(READ_BIT(RCC->CR,RCC_CR_PLLRDY));
 8000532:	bf00      	nop
 8000534:	4b1f      	ldr	r3, [pc, #124]	; (80005b4 <configureClock+0xbc>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800053c:	2b00      	cmp	r3, #0
 800053e:	d1f9      	bne.n	8000534 <configureClock+0x3c>


	//Configure PLL: source = HSE, SYCLK=72Mhz
	MODIFY_REG(RCC->PLLCFGR,
 8000540:	4b1c      	ldr	r3, [pc, #112]	; (80005b4 <configureClock+0xbc>)
 8000542:	685b      	ldr	r3, [r3, #4]
 8000544:	4a1c      	ldr	r2, [pc, #112]	; (80005b8 <configureClock+0xc0>)
 8000546:	401a      	ands	r2, r3
 8000548:	491a      	ldr	r1, [pc, #104]	; (80005b4 <configureClock+0xbc>)
 800054a:	4b1c      	ldr	r3, [pc, #112]	; (80005bc <configureClock+0xc4>)
 800054c:	4313      	orrs	r3, r2
 800054e:	604b      	str	r3, [r1, #4]
			RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
			_VAL2FLD(RCC_PLLCFGR_PLLM, 4) | _VAL2FLD(RCC_PLLCFGR_PLLN, 72) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 3) | RCC_PLLCFGR_PLLSRC_HSE);

	// Configures PPRE1 = 2
		MODIFY_REG(RCC->CFGR,
 8000550:	4b18      	ldr	r3, [pc, #96]	; (80005b4 <configureClock+0xbc>)
 8000552:	689b      	ldr	r3, [r3, #8]
 8000554:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000558:	4a16      	ldr	r2, [pc, #88]	; (80005b4 <configureClock+0xbc>)
 800055a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800055e:	6093      	str	r3, [r2, #8]
			RCC_CFGR_PPRE1,_VAL2FLD(RCC_CFGR_PPRE1, 4));

	//Enable PLL Module
	SET_BIT(RCC->CR,RCC_CR_PLLON);
 8000560:	4b14      	ldr	r3, [pc, #80]	; (80005b4 <configureClock+0xbc>)
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	4a13      	ldr	r2, [pc, #76]	; (80005b4 <configureClock+0xbc>)
 8000566:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800056a:	6013      	str	r3, [r2, #0]

	//Wait until PLL is stable
	while(!READ_BIT(RCC->CR,RCC_CR_PLLRDY));
 800056c:	bf00      	nop
 800056e:	4b11      	ldr	r3, [pc, #68]	; (80005b4 <configureClock+0xbc>)
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000576:	2b00      	cmp	r3, #0
 8000578:	d0f9      	beq.n	800056e <configureClock+0x76>

	//Modify System clock to PLL
	MODIFY_REG(RCC->CFGR,
 800057a:	4b0e      	ldr	r3, [pc, #56]	; (80005b4 <configureClock+0xbc>)
 800057c:	689b      	ldr	r3, [r3, #8]
 800057e:	f023 0303 	bic.w	r3, r3, #3
 8000582:	4a0c      	ldr	r2, [pc, #48]	; (80005b4 <configureClock+0xbc>)
 8000584:	f043 0302 	orr.w	r3, r3, #2
 8000588:	6093      	str	r3, [r2, #8]
			RCC_CFGR_SW,
			_VAL2FLD(RCC_CFGR_SW,RCC_CFGR_SW_PLL));


	//Wait until PLL is switched
	while(READ_BIT(RCC->CFGR,RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 800058a:	bf00      	nop
 800058c:	4b09      	ldr	r3, [pc, #36]	; (80005b4 <configureClock+0xbc>)
 800058e:	689b      	ldr	r3, [r3, #8]
 8000590:	f003 030c 	and.w	r3, r3, #12
 8000594:	2b08      	cmp	r3, #8
 8000596:	d1f9      	bne.n	800058c <configureClock+0x94>

	//Disable HSI
	CLEAR_BIT(RCC->CR,RCC_CR_HSION);
 8000598:	4b06      	ldr	r3, [pc, #24]	; (80005b4 <configureClock+0xbc>)
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	4a05      	ldr	r2, [pc, #20]	; (80005b4 <configureClock+0xbc>)
 800059e:	f023 0301 	bic.w	r3, r3, #1
 80005a2:	6013      	str	r3, [r2, #0]
}
 80005a4:	bf00      	nop
 80005a6:	46bd      	mov	sp, r7
 80005a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop
 80005b0:	40023c00 	.word	0x40023c00
 80005b4:	40023800 	.word	0x40023800
 80005b8:	f0bc8000 	.word	0xf0bc8000
 80005bc:	03401204 	.word	0x03401204

080005c0 <SystemInit>:

void SystemInit(void)
{
 80005c0:	b580      	push	{r7, lr}
 80005c2:	af00      	add	r7, sp, #0
	configureClock();
 80005c4:	f7ff ff98 	bl	80004f8 <configureClock>
}
 80005c8:	bf00      	nop
 80005ca:	bd80      	pop	{r7, pc}

080005cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005cc:	480d      	ldr	r0, [pc, #52]	; (8000604 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005ce:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005d0:	480d      	ldr	r0, [pc, #52]	; (8000608 <LoopForever+0x6>)
  ldr r1, =_edata
 80005d2:	490e      	ldr	r1, [pc, #56]	; (800060c <LoopForever+0xa>)
  ldr r2, =_sidata
 80005d4:	4a0e      	ldr	r2, [pc, #56]	; (8000610 <LoopForever+0xe>)
  movs r3, #0
 80005d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005d8:	e002      	b.n	80005e0 <LoopCopyDataInit>

080005da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005de:	3304      	adds	r3, #4

080005e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005e4:	d3f9      	bcc.n	80005da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005e6:	4a0b      	ldr	r2, [pc, #44]	; (8000614 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005e8:	4c0b      	ldr	r4, [pc, #44]	; (8000618 <LoopForever+0x16>)
  movs r3, #0
 80005ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005ec:	e001      	b.n	80005f2 <LoopFillZerobss>

080005ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005f0:	3204      	adds	r2, #4

080005f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005f4:	d3fb      	bcc.n	80005ee <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005f6:	f7ff ffe3 	bl	80005c0 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80005fa:	f000 f811 	bl	8000620 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005fe:	f7ff ff71 	bl	80004e4 <main>

08000602 <LoopForever>:

LoopForever:
    b LoopForever
 8000602:	e7fe      	b.n	8000602 <LoopForever>
  ldr   r0, =_estack
 8000604:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000608:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800060c:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 8000610:	0800166c 	.word	0x0800166c
  ldr r2, =_sbss
 8000614:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 8000618:	20000094 	.word	0x20000094

0800061c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800061c:	e7fe      	b.n	800061c <ADC_IRQHandler>
	...

08000620 <__libc_init_array>:
 8000620:	b570      	push	{r4, r5, r6, lr}
 8000622:	4e0d      	ldr	r6, [pc, #52]	; (8000658 <__libc_init_array+0x38>)
 8000624:	4c0d      	ldr	r4, [pc, #52]	; (800065c <__libc_init_array+0x3c>)
 8000626:	1ba4      	subs	r4, r4, r6
 8000628:	10a4      	asrs	r4, r4, #2
 800062a:	2500      	movs	r5, #0
 800062c:	42a5      	cmp	r5, r4
 800062e:	d109      	bne.n	8000644 <__libc_init_array+0x24>
 8000630:	4e0b      	ldr	r6, [pc, #44]	; (8000660 <__libc_init_array+0x40>)
 8000632:	4c0c      	ldr	r4, [pc, #48]	; (8000664 <__libc_init_array+0x44>)
 8000634:	f000 ff8e 	bl	8001554 <_init>
 8000638:	1ba4      	subs	r4, r4, r6
 800063a:	10a4      	asrs	r4, r4, #2
 800063c:	2500      	movs	r5, #0
 800063e:	42a5      	cmp	r5, r4
 8000640:	d105      	bne.n	800064e <__libc_init_array+0x2e>
 8000642:	bd70      	pop	{r4, r5, r6, pc}
 8000644:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000648:	4798      	blx	r3
 800064a:	3501      	adds	r5, #1
 800064c:	e7ee      	b.n	800062c <__libc_init_array+0xc>
 800064e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000652:	4798      	blx	r3
 8000654:	3501      	adds	r5, #1
 8000656:	e7f2      	b.n	800063e <__libc_init_array+0x1e>
 8000658:	08001664 	.word	0x08001664
 800065c:	08001664 	.word	0x08001664
 8000660:	08001664 	.word	0x08001664
 8000664:	08001668 	.word	0x08001668

08000668 <memset>:
 8000668:	4402      	add	r2, r0
 800066a:	4603      	mov	r3, r0
 800066c:	4293      	cmp	r3, r2
 800066e:	d100      	bne.n	8000672 <memset+0xa>
 8000670:	4770      	bx	lr
 8000672:	f803 1b01 	strb.w	r1, [r3], #1
 8000676:	e7f9      	b.n	800066c <memset+0x4>

08000678 <__sfputc_r>:
 8000678:	6893      	ldr	r3, [r2, #8]
 800067a:	3b01      	subs	r3, #1
 800067c:	2b00      	cmp	r3, #0
 800067e:	b410      	push	{r4}
 8000680:	6093      	str	r3, [r2, #8]
 8000682:	da08      	bge.n	8000696 <__sfputc_r+0x1e>
 8000684:	6994      	ldr	r4, [r2, #24]
 8000686:	42a3      	cmp	r3, r4
 8000688:	db01      	blt.n	800068e <__sfputc_r+0x16>
 800068a:	290a      	cmp	r1, #10
 800068c:	d103      	bne.n	8000696 <__sfputc_r+0x1e>
 800068e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000692:	f000 baef 	b.w	8000c74 <__swbuf_r>
 8000696:	6813      	ldr	r3, [r2, #0]
 8000698:	1c58      	adds	r0, r3, #1
 800069a:	6010      	str	r0, [r2, #0]
 800069c:	7019      	strb	r1, [r3, #0]
 800069e:	4608      	mov	r0, r1
 80006a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80006a4:	4770      	bx	lr

080006a6 <__sfputs_r>:
 80006a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006a8:	4606      	mov	r6, r0
 80006aa:	460f      	mov	r7, r1
 80006ac:	4614      	mov	r4, r2
 80006ae:	18d5      	adds	r5, r2, r3
 80006b0:	42ac      	cmp	r4, r5
 80006b2:	d101      	bne.n	80006b8 <__sfputs_r+0x12>
 80006b4:	2000      	movs	r0, #0
 80006b6:	e007      	b.n	80006c8 <__sfputs_r+0x22>
 80006b8:	463a      	mov	r2, r7
 80006ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006be:	4630      	mov	r0, r6
 80006c0:	f7ff ffda 	bl	8000678 <__sfputc_r>
 80006c4:	1c43      	adds	r3, r0, #1
 80006c6:	d1f3      	bne.n	80006b0 <__sfputs_r+0xa>
 80006c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080006cc <_vfiprintf_r>:
 80006cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006d0:	460c      	mov	r4, r1
 80006d2:	b09d      	sub	sp, #116	; 0x74
 80006d4:	4617      	mov	r7, r2
 80006d6:	461d      	mov	r5, r3
 80006d8:	4606      	mov	r6, r0
 80006da:	b118      	cbz	r0, 80006e4 <_vfiprintf_r+0x18>
 80006dc:	6983      	ldr	r3, [r0, #24]
 80006de:	b90b      	cbnz	r3, 80006e4 <_vfiprintf_r+0x18>
 80006e0:	f000 fc78 	bl	8000fd4 <__sinit>
 80006e4:	4b7c      	ldr	r3, [pc, #496]	; (80008d8 <_vfiprintf_r+0x20c>)
 80006e6:	429c      	cmp	r4, r3
 80006e8:	d158      	bne.n	800079c <_vfiprintf_r+0xd0>
 80006ea:	6874      	ldr	r4, [r6, #4]
 80006ec:	89a3      	ldrh	r3, [r4, #12]
 80006ee:	0718      	lsls	r0, r3, #28
 80006f0:	d55e      	bpl.n	80007b0 <_vfiprintf_r+0xe4>
 80006f2:	6923      	ldr	r3, [r4, #16]
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d05b      	beq.n	80007b0 <_vfiprintf_r+0xe4>
 80006f8:	2300      	movs	r3, #0
 80006fa:	9309      	str	r3, [sp, #36]	; 0x24
 80006fc:	2320      	movs	r3, #32
 80006fe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000702:	2330      	movs	r3, #48	; 0x30
 8000704:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000708:	9503      	str	r5, [sp, #12]
 800070a:	f04f 0b01 	mov.w	fp, #1
 800070e:	46b8      	mov	r8, r7
 8000710:	4645      	mov	r5, r8
 8000712:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000716:	b10b      	cbz	r3, 800071c <_vfiprintf_r+0x50>
 8000718:	2b25      	cmp	r3, #37	; 0x25
 800071a:	d154      	bne.n	80007c6 <_vfiprintf_r+0xfa>
 800071c:	ebb8 0a07 	subs.w	sl, r8, r7
 8000720:	d00b      	beq.n	800073a <_vfiprintf_r+0x6e>
 8000722:	4653      	mov	r3, sl
 8000724:	463a      	mov	r2, r7
 8000726:	4621      	mov	r1, r4
 8000728:	4630      	mov	r0, r6
 800072a:	f7ff ffbc 	bl	80006a6 <__sfputs_r>
 800072e:	3001      	adds	r0, #1
 8000730:	f000 80c2 	beq.w	80008b8 <_vfiprintf_r+0x1ec>
 8000734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000736:	4453      	add	r3, sl
 8000738:	9309      	str	r3, [sp, #36]	; 0x24
 800073a:	f898 3000 	ldrb.w	r3, [r8]
 800073e:	2b00      	cmp	r3, #0
 8000740:	f000 80ba 	beq.w	80008b8 <_vfiprintf_r+0x1ec>
 8000744:	2300      	movs	r3, #0
 8000746:	f04f 32ff 	mov.w	r2, #4294967295
 800074a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800074e:	9304      	str	r3, [sp, #16]
 8000750:	9307      	str	r3, [sp, #28]
 8000752:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000756:	931a      	str	r3, [sp, #104]	; 0x68
 8000758:	46a8      	mov	r8, r5
 800075a:	2205      	movs	r2, #5
 800075c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000760:	485e      	ldr	r0, [pc, #376]	; (80008dc <_vfiprintf_r+0x210>)
 8000762:	f7ff fd45 	bl	80001f0 <memchr>
 8000766:	9b04      	ldr	r3, [sp, #16]
 8000768:	bb78      	cbnz	r0, 80007ca <_vfiprintf_r+0xfe>
 800076a:	06d9      	lsls	r1, r3, #27
 800076c:	bf44      	itt	mi
 800076e:	2220      	movmi	r2, #32
 8000770:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000774:	071a      	lsls	r2, r3, #28
 8000776:	bf44      	itt	mi
 8000778:	222b      	movmi	r2, #43	; 0x2b
 800077a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800077e:	782a      	ldrb	r2, [r5, #0]
 8000780:	2a2a      	cmp	r2, #42	; 0x2a
 8000782:	d02a      	beq.n	80007da <_vfiprintf_r+0x10e>
 8000784:	9a07      	ldr	r2, [sp, #28]
 8000786:	46a8      	mov	r8, r5
 8000788:	2000      	movs	r0, #0
 800078a:	250a      	movs	r5, #10
 800078c:	4641      	mov	r1, r8
 800078e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000792:	3b30      	subs	r3, #48	; 0x30
 8000794:	2b09      	cmp	r3, #9
 8000796:	d969      	bls.n	800086c <_vfiprintf_r+0x1a0>
 8000798:	b360      	cbz	r0, 80007f4 <_vfiprintf_r+0x128>
 800079a:	e024      	b.n	80007e6 <_vfiprintf_r+0x11a>
 800079c:	4b50      	ldr	r3, [pc, #320]	; (80008e0 <_vfiprintf_r+0x214>)
 800079e:	429c      	cmp	r4, r3
 80007a0:	d101      	bne.n	80007a6 <_vfiprintf_r+0xda>
 80007a2:	68b4      	ldr	r4, [r6, #8]
 80007a4:	e7a2      	b.n	80006ec <_vfiprintf_r+0x20>
 80007a6:	4b4f      	ldr	r3, [pc, #316]	; (80008e4 <_vfiprintf_r+0x218>)
 80007a8:	429c      	cmp	r4, r3
 80007aa:	bf08      	it	eq
 80007ac:	68f4      	ldreq	r4, [r6, #12]
 80007ae:	e79d      	b.n	80006ec <_vfiprintf_r+0x20>
 80007b0:	4621      	mov	r1, r4
 80007b2:	4630      	mov	r0, r6
 80007b4:	f000 fab0 	bl	8000d18 <__swsetup_r>
 80007b8:	2800      	cmp	r0, #0
 80007ba:	d09d      	beq.n	80006f8 <_vfiprintf_r+0x2c>
 80007bc:	f04f 30ff 	mov.w	r0, #4294967295
 80007c0:	b01d      	add	sp, #116	; 0x74
 80007c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007c6:	46a8      	mov	r8, r5
 80007c8:	e7a2      	b.n	8000710 <_vfiprintf_r+0x44>
 80007ca:	4a44      	ldr	r2, [pc, #272]	; (80008dc <_vfiprintf_r+0x210>)
 80007cc:	1a80      	subs	r0, r0, r2
 80007ce:	fa0b f000 	lsl.w	r0, fp, r0
 80007d2:	4318      	orrs	r0, r3
 80007d4:	9004      	str	r0, [sp, #16]
 80007d6:	4645      	mov	r5, r8
 80007d8:	e7be      	b.n	8000758 <_vfiprintf_r+0x8c>
 80007da:	9a03      	ldr	r2, [sp, #12]
 80007dc:	1d11      	adds	r1, r2, #4
 80007de:	6812      	ldr	r2, [r2, #0]
 80007e0:	9103      	str	r1, [sp, #12]
 80007e2:	2a00      	cmp	r2, #0
 80007e4:	db01      	blt.n	80007ea <_vfiprintf_r+0x11e>
 80007e6:	9207      	str	r2, [sp, #28]
 80007e8:	e004      	b.n	80007f4 <_vfiprintf_r+0x128>
 80007ea:	4252      	negs	r2, r2
 80007ec:	f043 0302 	orr.w	r3, r3, #2
 80007f0:	9207      	str	r2, [sp, #28]
 80007f2:	9304      	str	r3, [sp, #16]
 80007f4:	f898 3000 	ldrb.w	r3, [r8]
 80007f8:	2b2e      	cmp	r3, #46	; 0x2e
 80007fa:	d10e      	bne.n	800081a <_vfiprintf_r+0x14e>
 80007fc:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000800:	2b2a      	cmp	r3, #42	; 0x2a
 8000802:	d138      	bne.n	8000876 <_vfiprintf_r+0x1aa>
 8000804:	9b03      	ldr	r3, [sp, #12]
 8000806:	1d1a      	adds	r2, r3, #4
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	9203      	str	r2, [sp, #12]
 800080c:	2b00      	cmp	r3, #0
 800080e:	bfb8      	it	lt
 8000810:	f04f 33ff 	movlt.w	r3, #4294967295
 8000814:	f108 0802 	add.w	r8, r8, #2
 8000818:	9305      	str	r3, [sp, #20]
 800081a:	4d33      	ldr	r5, [pc, #204]	; (80008e8 <_vfiprintf_r+0x21c>)
 800081c:	f898 1000 	ldrb.w	r1, [r8]
 8000820:	2203      	movs	r2, #3
 8000822:	4628      	mov	r0, r5
 8000824:	f7ff fce4 	bl	80001f0 <memchr>
 8000828:	b140      	cbz	r0, 800083c <_vfiprintf_r+0x170>
 800082a:	2340      	movs	r3, #64	; 0x40
 800082c:	1b40      	subs	r0, r0, r5
 800082e:	fa03 f000 	lsl.w	r0, r3, r0
 8000832:	9b04      	ldr	r3, [sp, #16]
 8000834:	4303      	orrs	r3, r0
 8000836:	f108 0801 	add.w	r8, r8, #1
 800083a:	9304      	str	r3, [sp, #16]
 800083c:	f898 1000 	ldrb.w	r1, [r8]
 8000840:	482a      	ldr	r0, [pc, #168]	; (80008ec <_vfiprintf_r+0x220>)
 8000842:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000846:	2206      	movs	r2, #6
 8000848:	f108 0701 	add.w	r7, r8, #1
 800084c:	f7ff fcd0 	bl	80001f0 <memchr>
 8000850:	2800      	cmp	r0, #0
 8000852:	d037      	beq.n	80008c4 <_vfiprintf_r+0x1f8>
 8000854:	4b26      	ldr	r3, [pc, #152]	; (80008f0 <_vfiprintf_r+0x224>)
 8000856:	bb1b      	cbnz	r3, 80008a0 <_vfiprintf_r+0x1d4>
 8000858:	9b03      	ldr	r3, [sp, #12]
 800085a:	3307      	adds	r3, #7
 800085c:	f023 0307 	bic.w	r3, r3, #7
 8000860:	3308      	adds	r3, #8
 8000862:	9303      	str	r3, [sp, #12]
 8000864:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000866:	444b      	add	r3, r9
 8000868:	9309      	str	r3, [sp, #36]	; 0x24
 800086a:	e750      	b.n	800070e <_vfiprintf_r+0x42>
 800086c:	fb05 3202 	mla	r2, r5, r2, r3
 8000870:	2001      	movs	r0, #1
 8000872:	4688      	mov	r8, r1
 8000874:	e78a      	b.n	800078c <_vfiprintf_r+0xc0>
 8000876:	2300      	movs	r3, #0
 8000878:	f108 0801 	add.w	r8, r8, #1
 800087c:	9305      	str	r3, [sp, #20]
 800087e:	4619      	mov	r1, r3
 8000880:	250a      	movs	r5, #10
 8000882:	4640      	mov	r0, r8
 8000884:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000888:	3a30      	subs	r2, #48	; 0x30
 800088a:	2a09      	cmp	r2, #9
 800088c:	d903      	bls.n	8000896 <_vfiprintf_r+0x1ca>
 800088e:	2b00      	cmp	r3, #0
 8000890:	d0c3      	beq.n	800081a <_vfiprintf_r+0x14e>
 8000892:	9105      	str	r1, [sp, #20]
 8000894:	e7c1      	b.n	800081a <_vfiprintf_r+0x14e>
 8000896:	fb05 2101 	mla	r1, r5, r1, r2
 800089a:	2301      	movs	r3, #1
 800089c:	4680      	mov	r8, r0
 800089e:	e7f0      	b.n	8000882 <_vfiprintf_r+0x1b6>
 80008a0:	ab03      	add	r3, sp, #12
 80008a2:	9300      	str	r3, [sp, #0]
 80008a4:	4622      	mov	r2, r4
 80008a6:	4b13      	ldr	r3, [pc, #76]	; (80008f4 <_vfiprintf_r+0x228>)
 80008a8:	a904      	add	r1, sp, #16
 80008aa:	4630      	mov	r0, r6
 80008ac:	f3af 8000 	nop.w
 80008b0:	f1b0 3fff 	cmp.w	r0, #4294967295
 80008b4:	4681      	mov	r9, r0
 80008b6:	d1d5      	bne.n	8000864 <_vfiprintf_r+0x198>
 80008b8:	89a3      	ldrh	r3, [r4, #12]
 80008ba:	065b      	lsls	r3, r3, #25
 80008bc:	f53f af7e 	bmi.w	80007bc <_vfiprintf_r+0xf0>
 80008c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80008c2:	e77d      	b.n	80007c0 <_vfiprintf_r+0xf4>
 80008c4:	ab03      	add	r3, sp, #12
 80008c6:	9300      	str	r3, [sp, #0]
 80008c8:	4622      	mov	r2, r4
 80008ca:	4b0a      	ldr	r3, [pc, #40]	; (80008f4 <_vfiprintf_r+0x228>)
 80008cc:	a904      	add	r1, sp, #16
 80008ce:	4630      	mov	r0, r6
 80008d0:	f000 f892 	bl	80009f8 <_printf_i>
 80008d4:	e7ec      	b.n	80008b0 <_vfiprintf_r+0x1e4>
 80008d6:	bf00      	nop
 80008d8:	08001624 	.word	0x08001624
 80008dc:	080015d0 	.word	0x080015d0
 80008e0:	08001644 	.word	0x08001644
 80008e4:	08001604 	.word	0x08001604
 80008e8:	080015d6 	.word	0x080015d6
 80008ec:	080015da 	.word	0x080015da
 80008f0:	00000000 	.word	0x00000000
 80008f4:	080006a7 	.word	0x080006a7

080008f8 <vfiprintf>:
 80008f8:	4613      	mov	r3, r2
 80008fa:	460a      	mov	r2, r1
 80008fc:	4601      	mov	r1, r0
 80008fe:	4802      	ldr	r0, [pc, #8]	; (8000908 <vfiprintf+0x10>)
 8000900:	6800      	ldr	r0, [r0, #0]
 8000902:	f7ff bee3 	b.w	80006cc <_vfiprintf_r>
 8000906:	bf00      	nop
 8000908:	20000004 	.word	0x20000004

0800090c <_printf_common>:
 800090c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000910:	4691      	mov	r9, r2
 8000912:	461f      	mov	r7, r3
 8000914:	688a      	ldr	r2, [r1, #8]
 8000916:	690b      	ldr	r3, [r1, #16]
 8000918:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800091c:	4293      	cmp	r3, r2
 800091e:	bfb8      	it	lt
 8000920:	4613      	movlt	r3, r2
 8000922:	f8c9 3000 	str.w	r3, [r9]
 8000926:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800092a:	4606      	mov	r6, r0
 800092c:	460c      	mov	r4, r1
 800092e:	b112      	cbz	r2, 8000936 <_printf_common+0x2a>
 8000930:	3301      	adds	r3, #1
 8000932:	f8c9 3000 	str.w	r3, [r9]
 8000936:	6823      	ldr	r3, [r4, #0]
 8000938:	0699      	lsls	r1, r3, #26
 800093a:	bf42      	ittt	mi
 800093c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000940:	3302      	addmi	r3, #2
 8000942:	f8c9 3000 	strmi.w	r3, [r9]
 8000946:	6825      	ldr	r5, [r4, #0]
 8000948:	f015 0506 	ands.w	r5, r5, #6
 800094c:	d107      	bne.n	800095e <_printf_common+0x52>
 800094e:	f104 0a19 	add.w	sl, r4, #25
 8000952:	68e3      	ldr	r3, [r4, #12]
 8000954:	f8d9 2000 	ldr.w	r2, [r9]
 8000958:	1a9b      	subs	r3, r3, r2
 800095a:	42ab      	cmp	r3, r5
 800095c:	dc28      	bgt.n	80009b0 <_printf_common+0xa4>
 800095e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000962:	6822      	ldr	r2, [r4, #0]
 8000964:	3300      	adds	r3, #0
 8000966:	bf18      	it	ne
 8000968:	2301      	movne	r3, #1
 800096a:	0692      	lsls	r2, r2, #26
 800096c:	d42d      	bmi.n	80009ca <_printf_common+0xbe>
 800096e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000972:	4639      	mov	r1, r7
 8000974:	4630      	mov	r0, r6
 8000976:	47c0      	blx	r8
 8000978:	3001      	adds	r0, #1
 800097a:	d020      	beq.n	80009be <_printf_common+0xb2>
 800097c:	6823      	ldr	r3, [r4, #0]
 800097e:	68e5      	ldr	r5, [r4, #12]
 8000980:	f8d9 2000 	ldr.w	r2, [r9]
 8000984:	f003 0306 	and.w	r3, r3, #6
 8000988:	2b04      	cmp	r3, #4
 800098a:	bf08      	it	eq
 800098c:	1aad      	subeq	r5, r5, r2
 800098e:	68a3      	ldr	r3, [r4, #8]
 8000990:	6922      	ldr	r2, [r4, #16]
 8000992:	bf0c      	ite	eq
 8000994:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000998:	2500      	movne	r5, #0
 800099a:	4293      	cmp	r3, r2
 800099c:	bfc4      	itt	gt
 800099e:	1a9b      	subgt	r3, r3, r2
 80009a0:	18ed      	addgt	r5, r5, r3
 80009a2:	f04f 0900 	mov.w	r9, #0
 80009a6:	341a      	adds	r4, #26
 80009a8:	454d      	cmp	r5, r9
 80009aa:	d11a      	bne.n	80009e2 <_printf_common+0xd6>
 80009ac:	2000      	movs	r0, #0
 80009ae:	e008      	b.n	80009c2 <_printf_common+0xb6>
 80009b0:	2301      	movs	r3, #1
 80009b2:	4652      	mov	r2, sl
 80009b4:	4639      	mov	r1, r7
 80009b6:	4630      	mov	r0, r6
 80009b8:	47c0      	blx	r8
 80009ba:	3001      	adds	r0, #1
 80009bc:	d103      	bne.n	80009c6 <_printf_common+0xba>
 80009be:	f04f 30ff 	mov.w	r0, #4294967295
 80009c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009c6:	3501      	adds	r5, #1
 80009c8:	e7c3      	b.n	8000952 <_printf_common+0x46>
 80009ca:	18e1      	adds	r1, r4, r3
 80009cc:	1c5a      	adds	r2, r3, #1
 80009ce:	2030      	movs	r0, #48	; 0x30
 80009d0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80009d4:	4422      	add	r2, r4
 80009d6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80009da:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80009de:	3302      	adds	r3, #2
 80009e0:	e7c5      	b.n	800096e <_printf_common+0x62>
 80009e2:	2301      	movs	r3, #1
 80009e4:	4622      	mov	r2, r4
 80009e6:	4639      	mov	r1, r7
 80009e8:	4630      	mov	r0, r6
 80009ea:	47c0      	blx	r8
 80009ec:	3001      	adds	r0, #1
 80009ee:	d0e6      	beq.n	80009be <_printf_common+0xb2>
 80009f0:	f109 0901 	add.w	r9, r9, #1
 80009f4:	e7d8      	b.n	80009a8 <_printf_common+0x9c>
	...

080009f8 <_printf_i>:
 80009f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80009fc:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000a00:	460c      	mov	r4, r1
 8000a02:	7e09      	ldrb	r1, [r1, #24]
 8000a04:	b085      	sub	sp, #20
 8000a06:	296e      	cmp	r1, #110	; 0x6e
 8000a08:	4617      	mov	r7, r2
 8000a0a:	4606      	mov	r6, r0
 8000a0c:	4698      	mov	r8, r3
 8000a0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000a10:	f000 80b3 	beq.w	8000b7a <_printf_i+0x182>
 8000a14:	d822      	bhi.n	8000a5c <_printf_i+0x64>
 8000a16:	2963      	cmp	r1, #99	; 0x63
 8000a18:	d036      	beq.n	8000a88 <_printf_i+0x90>
 8000a1a:	d80a      	bhi.n	8000a32 <_printf_i+0x3a>
 8000a1c:	2900      	cmp	r1, #0
 8000a1e:	f000 80b9 	beq.w	8000b94 <_printf_i+0x19c>
 8000a22:	2958      	cmp	r1, #88	; 0x58
 8000a24:	f000 8083 	beq.w	8000b2e <_printf_i+0x136>
 8000a28:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000a2c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000a30:	e032      	b.n	8000a98 <_printf_i+0xa0>
 8000a32:	2964      	cmp	r1, #100	; 0x64
 8000a34:	d001      	beq.n	8000a3a <_printf_i+0x42>
 8000a36:	2969      	cmp	r1, #105	; 0x69
 8000a38:	d1f6      	bne.n	8000a28 <_printf_i+0x30>
 8000a3a:	6820      	ldr	r0, [r4, #0]
 8000a3c:	6813      	ldr	r3, [r2, #0]
 8000a3e:	0605      	lsls	r5, r0, #24
 8000a40:	f103 0104 	add.w	r1, r3, #4
 8000a44:	d52a      	bpl.n	8000a9c <_printf_i+0xa4>
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6011      	str	r1, [r2, #0]
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	da03      	bge.n	8000a56 <_printf_i+0x5e>
 8000a4e:	222d      	movs	r2, #45	; 0x2d
 8000a50:	425b      	negs	r3, r3
 8000a52:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000a56:	486f      	ldr	r0, [pc, #444]	; (8000c14 <_printf_i+0x21c>)
 8000a58:	220a      	movs	r2, #10
 8000a5a:	e039      	b.n	8000ad0 <_printf_i+0xd8>
 8000a5c:	2973      	cmp	r1, #115	; 0x73
 8000a5e:	f000 809d 	beq.w	8000b9c <_printf_i+0x1a4>
 8000a62:	d808      	bhi.n	8000a76 <_printf_i+0x7e>
 8000a64:	296f      	cmp	r1, #111	; 0x6f
 8000a66:	d020      	beq.n	8000aaa <_printf_i+0xb2>
 8000a68:	2970      	cmp	r1, #112	; 0x70
 8000a6a:	d1dd      	bne.n	8000a28 <_printf_i+0x30>
 8000a6c:	6823      	ldr	r3, [r4, #0]
 8000a6e:	f043 0320 	orr.w	r3, r3, #32
 8000a72:	6023      	str	r3, [r4, #0]
 8000a74:	e003      	b.n	8000a7e <_printf_i+0x86>
 8000a76:	2975      	cmp	r1, #117	; 0x75
 8000a78:	d017      	beq.n	8000aaa <_printf_i+0xb2>
 8000a7a:	2978      	cmp	r1, #120	; 0x78
 8000a7c:	d1d4      	bne.n	8000a28 <_printf_i+0x30>
 8000a7e:	2378      	movs	r3, #120	; 0x78
 8000a80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000a84:	4864      	ldr	r0, [pc, #400]	; (8000c18 <_printf_i+0x220>)
 8000a86:	e055      	b.n	8000b34 <_printf_i+0x13c>
 8000a88:	6813      	ldr	r3, [r2, #0]
 8000a8a:	1d19      	adds	r1, r3, #4
 8000a8c:	681b      	ldr	r3, [r3, #0]
 8000a8e:	6011      	str	r1, [r2, #0]
 8000a90:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000a94:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000a98:	2301      	movs	r3, #1
 8000a9a:	e08c      	b.n	8000bb6 <_printf_i+0x1be>
 8000a9c:	681b      	ldr	r3, [r3, #0]
 8000a9e:	6011      	str	r1, [r2, #0]
 8000aa0:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000aa4:	bf18      	it	ne
 8000aa6:	b21b      	sxthne	r3, r3
 8000aa8:	e7cf      	b.n	8000a4a <_printf_i+0x52>
 8000aaa:	6813      	ldr	r3, [r2, #0]
 8000aac:	6825      	ldr	r5, [r4, #0]
 8000aae:	1d18      	adds	r0, r3, #4
 8000ab0:	6010      	str	r0, [r2, #0]
 8000ab2:	0628      	lsls	r0, r5, #24
 8000ab4:	d501      	bpl.n	8000aba <_printf_i+0xc2>
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	e002      	b.n	8000ac0 <_printf_i+0xc8>
 8000aba:	0668      	lsls	r0, r5, #25
 8000abc:	d5fb      	bpl.n	8000ab6 <_printf_i+0xbe>
 8000abe:	881b      	ldrh	r3, [r3, #0]
 8000ac0:	4854      	ldr	r0, [pc, #336]	; (8000c14 <_printf_i+0x21c>)
 8000ac2:	296f      	cmp	r1, #111	; 0x6f
 8000ac4:	bf14      	ite	ne
 8000ac6:	220a      	movne	r2, #10
 8000ac8:	2208      	moveq	r2, #8
 8000aca:	2100      	movs	r1, #0
 8000acc:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ad0:	6865      	ldr	r5, [r4, #4]
 8000ad2:	60a5      	str	r5, [r4, #8]
 8000ad4:	2d00      	cmp	r5, #0
 8000ad6:	f2c0 8095 	blt.w	8000c04 <_printf_i+0x20c>
 8000ada:	6821      	ldr	r1, [r4, #0]
 8000adc:	f021 0104 	bic.w	r1, r1, #4
 8000ae0:	6021      	str	r1, [r4, #0]
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d13d      	bne.n	8000b62 <_printf_i+0x16a>
 8000ae6:	2d00      	cmp	r5, #0
 8000ae8:	f040 808e 	bne.w	8000c08 <_printf_i+0x210>
 8000aec:	4665      	mov	r5, ip
 8000aee:	2a08      	cmp	r2, #8
 8000af0:	d10b      	bne.n	8000b0a <_printf_i+0x112>
 8000af2:	6823      	ldr	r3, [r4, #0]
 8000af4:	07db      	lsls	r3, r3, #31
 8000af6:	d508      	bpl.n	8000b0a <_printf_i+0x112>
 8000af8:	6923      	ldr	r3, [r4, #16]
 8000afa:	6862      	ldr	r2, [r4, #4]
 8000afc:	429a      	cmp	r2, r3
 8000afe:	bfde      	ittt	le
 8000b00:	2330      	movle	r3, #48	; 0x30
 8000b02:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000b06:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000b0a:	ebac 0305 	sub.w	r3, ip, r5
 8000b0e:	6123      	str	r3, [r4, #16]
 8000b10:	f8cd 8000 	str.w	r8, [sp]
 8000b14:	463b      	mov	r3, r7
 8000b16:	aa03      	add	r2, sp, #12
 8000b18:	4621      	mov	r1, r4
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	f7ff fef6 	bl	800090c <_printf_common>
 8000b20:	3001      	adds	r0, #1
 8000b22:	d14d      	bne.n	8000bc0 <_printf_i+0x1c8>
 8000b24:	f04f 30ff 	mov.w	r0, #4294967295
 8000b28:	b005      	add	sp, #20
 8000b2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000b2e:	4839      	ldr	r0, [pc, #228]	; (8000c14 <_printf_i+0x21c>)
 8000b30:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000b34:	6813      	ldr	r3, [r2, #0]
 8000b36:	6821      	ldr	r1, [r4, #0]
 8000b38:	1d1d      	adds	r5, r3, #4
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	6015      	str	r5, [r2, #0]
 8000b3e:	060a      	lsls	r2, r1, #24
 8000b40:	d50b      	bpl.n	8000b5a <_printf_i+0x162>
 8000b42:	07ca      	lsls	r2, r1, #31
 8000b44:	bf44      	itt	mi
 8000b46:	f041 0120 	orrmi.w	r1, r1, #32
 8000b4a:	6021      	strmi	r1, [r4, #0]
 8000b4c:	b91b      	cbnz	r3, 8000b56 <_printf_i+0x15e>
 8000b4e:	6822      	ldr	r2, [r4, #0]
 8000b50:	f022 0220 	bic.w	r2, r2, #32
 8000b54:	6022      	str	r2, [r4, #0]
 8000b56:	2210      	movs	r2, #16
 8000b58:	e7b7      	b.n	8000aca <_printf_i+0xd2>
 8000b5a:	064d      	lsls	r5, r1, #25
 8000b5c:	bf48      	it	mi
 8000b5e:	b29b      	uxthmi	r3, r3
 8000b60:	e7ef      	b.n	8000b42 <_printf_i+0x14a>
 8000b62:	4665      	mov	r5, ip
 8000b64:	fbb3 f1f2 	udiv	r1, r3, r2
 8000b68:	fb02 3311 	mls	r3, r2, r1, r3
 8000b6c:	5cc3      	ldrb	r3, [r0, r3]
 8000b6e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000b72:	460b      	mov	r3, r1
 8000b74:	2900      	cmp	r1, #0
 8000b76:	d1f5      	bne.n	8000b64 <_printf_i+0x16c>
 8000b78:	e7b9      	b.n	8000aee <_printf_i+0xf6>
 8000b7a:	6813      	ldr	r3, [r2, #0]
 8000b7c:	6825      	ldr	r5, [r4, #0]
 8000b7e:	6961      	ldr	r1, [r4, #20]
 8000b80:	1d18      	adds	r0, r3, #4
 8000b82:	6010      	str	r0, [r2, #0]
 8000b84:	0628      	lsls	r0, r5, #24
 8000b86:	681b      	ldr	r3, [r3, #0]
 8000b88:	d501      	bpl.n	8000b8e <_printf_i+0x196>
 8000b8a:	6019      	str	r1, [r3, #0]
 8000b8c:	e002      	b.n	8000b94 <_printf_i+0x19c>
 8000b8e:	066a      	lsls	r2, r5, #25
 8000b90:	d5fb      	bpl.n	8000b8a <_printf_i+0x192>
 8000b92:	8019      	strh	r1, [r3, #0]
 8000b94:	2300      	movs	r3, #0
 8000b96:	6123      	str	r3, [r4, #16]
 8000b98:	4665      	mov	r5, ip
 8000b9a:	e7b9      	b.n	8000b10 <_printf_i+0x118>
 8000b9c:	6813      	ldr	r3, [r2, #0]
 8000b9e:	1d19      	adds	r1, r3, #4
 8000ba0:	6011      	str	r1, [r2, #0]
 8000ba2:	681d      	ldr	r5, [r3, #0]
 8000ba4:	6862      	ldr	r2, [r4, #4]
 8000ba6:	2100      	movs	r1, #0
 8000ba8:	4628      	mov	r0, r5
 8000baa:	f7ff fb21 	bl	80001f0 <memchr>
 8000bae:	b108      	cbz	r0, 8000bb4 <_printf_i+0x1bc>
 8000bb0:	1b40      	subs	r0, r0, r5
 8000bb2:	6060      	str	r0, [r4, #4]
 8000bb4:	6863      	ldr	r3, [r4, #4]
 8000bb6:	6123      	str	r3, [r4, #16]
 8000bb8:	2300      	movs	r3, #0
 8000bba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000bbe:	e7a7      	b.n	8000b10 <_printf_i+0x118>
 8000bc0:	6923      	ldr	r3, [r4, #16]
 8000bc2:	462a      	mov	r2, r5
 8000bc4:	4639      	mov	r1, r7
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	47c0      	blx	r8
 8000bca:	3001      	adds	r0, #1
 8000bcc:	d0aa      	beq.n	8000b24 <_printf_i+0x12c>
 8000bce:	6823      	ldr	r3, [r4, #0]
 8000bd0:	079b      	lsls	r3, r3, #30
 8000bd2:	d413      	bmi.n	8000bfc <_printf_i+0x204>
 8000bd4:	68e0      	ldr	r0, [r4, #12]
 8000bd6:	9b03      	ldr	r3, [sp, #12]
 8000bd8:	4298      	cmp	r0, r3
 8000bda:	bfb8      	it	lt
 8000bdc:	4618      	movlt	r0, r3
 8000bde:	e7a3      	b.n	8000b28 <_printf_i+0x130>
 8000be0:	2301      	movs	r3, #1
 8000be2:	464a      	mov	r2, r9
 8000be4:	4639      	mov	r1, r7
 8000be6:	4630      	mov	r0, r6
 8000be8:	47c0      	blx	r8
 8000bea:	3001      	adds	r0, #1
 8000bec:	d09a      	beq.n	8000b24 <_printf_i+0x12c>
 8000bee:	3501      	adds	r5, #1
 8000bf0:	68e3      	ldr	r3, [r4, #12]
 8000bf2:	9a03      	ldr	r2, [sp, #12]
 8000bf4:	1a9b      	subs	r3, r3, r2
 8000bf6:	42ab      	cmp	r3, r5
 8000bf8:	dcf2      	bgt.n	8000be0 <_printf_i+0x1e8>
 8000bfa:	e7eb      	b.n	8000bd4 <_printf_i+0x1dc>
 8000bfc:	2500      	movs	r5, #0
 8000bfe:	f104 0919 	add.w	r9, r4, #25
 8000c02:	e7f5      	b.n	8000bf0 <_printf_i+0x1f8>
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d1ac      	bne.n	8000b62 <_printf_i+0x16a>
 8000c08:	7803      	ldrb	r3, [r0, #0]
 8000c0a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c0e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c12:	e76c      	b.n	8000aee <_printf_i+0xf6>
 8000c14:	080015e1 	.word	0x080015e1
 8000c18:	080015f2 	.word	0x080015f2

08000c1c <iprintf>:
 8000c1c:	b40f      	push	{r0, r1, r2, r3}
 8000c1e:	4b0a      	ldr	r3, [pc, #40]	; (8000c48 <iprintf+0x2c>)
 8000c20:	b513      	push	{r0, r1, r4, lr}
 8000c22:	681c      	ldr	r4, [r3, #0]
 8000c24:	b124      	cbz	r4, 8000c30 <iprintf+0x14>
 8000c26:	69a3      	ldr	r3, [r4, #24]
 8000c28:	b913      	cbnz	r3, 8000c30 <iprintf+0x14>
 8000c2a:	4620      	mov	r0, r4
 8000c2c:	f000 f9d2 	bl	8000fd4 <__sinit>
 8000c30:	ab05      	add	r3, sp, #20
 8000c32:	9a04      	ldr	r2, [sp, #16]
 8000c34:	68a1      	ldr	r1, [r4, #8]
 8000c36:	9301      	str	r3, [sp, #4]
 8000c38:	4620      	mov	r0, r4
 8000c3a:	f7ff fd47 	bl	80006cc <_vfiprintf_r>
 8000c3e:	b002      	add	sp, #8
 8000c40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c44:	b004      	add	sp, #16
 8000c46:	4770      	bx	lr
 8000c48:	20000004 	.word	0x20000004

08000c4c <putchar>:
 8000c4c:	b538      	push	{r3, r4, r5, lr}
 8000c4e:	4b08      	ldr	r3, [pc, #32]	; (8000c70 <putchar+0x24>)
 8000c50:	681c      	ldr	r4, [r3, #0]
 8000c52:	4605      	mov	r5, r0
 8000c54:	b124      	cbz	r4, 8000c60 <putchar+0x14>
 8000c56:	69a3      	ldr	r3, [r4, #24]
 8000c58:	b913      	cbnz	r3, 8000c60 <putchar+0x14>
 8000c5a:	4620      	mov	r0, r4
 8000c5c:	f000 f9ba 	bl	8000fd4 <__sinit>
 8000c60:	68a2      	ldr	r2, [r4, #8]
 8000c62:	4629      	mov	r1, r5
 8000c64:	4620      	mov	r0, r4
 8000c66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c6a:	f000 bb49 	b.w	8001300 <_putc_r>
 8000c6e:	bf00      	nop
 8000c70:	20000004 	.word	0x20000004

08000c74 <__swbuf_r>:
 8000c74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c76:	460e      	mov	r6, r1
 8000c78:	4614      	mov	r4, r2
 8000c7a:	4605      	mov	r5, r0
 8000c7c:	b118      	cbz	r0, 8000c86 <__swbuf_r+0x12>
 8000c7e:	6983      	ldr	r3, [r0, #24]
 8000c80:	b90b      	cbnz	r3, 8000c86 <__swbuf_r+0x12>
 8000c82:	f000 f9a7 	bl	8000fd4 <__sinit>
 8000c86:	4b21      	ldr	r3, [pc, #132]	; (8000d0c <__swbuf_r+0x98>)
 8000c88:	429c      	cmp	r4, r3
 8000c8a:	d12a      	bne.n	8000ce2 <__swbuf_r+0x6e>
 8000c8c:	686c      	ldr	r4, [r5, #4]
 8000c8e:	69a3      	ldr	r3, [r4, #24]
 8000c90:	60a3      	str	r3, [r4, #8]
 8000c92:	89a3      	ldrh	r3, [r4, #12]
 8000c94:	071a      	lsls	r2, r3, #28
 8000c96:	d52e      	bpl.n	8000cf6 <__swbuf_r+0x82>
 8000c98:	6923      	ldr	r3, [r4, #16]
 8000c9a:	b363      	cbz	r3, 8000cf6 <__swbuf_r+0x82>
 8000c9c:	6923      	ldr	r3, [r4, #16]
 8000c9e:	6820      	ldr	r0, [r4, #0]
 8000ca0:	1ac0      	subs	r0, r0, r3
 8000ca2:	6963      	ldr	r3, [r4, #20]
 8000ca4:	b2f6      	uxtb	r6, r6
 8000ca6:	4283      	cmp	r3, r0
 8000ca8:	4637      	mov	r7, r6
 8000caa:	dc04      	bgt.n	8000cb6 <__swbuf_r+0x42>
 8000cac:	4621      	mov	r1, r4
 8000cae:	4628      	mov	r0, r5
 8000cb0:	f000 f926 	bl	8000f00 <_fflush_r>
 8000cb4:	bb28      	cbnz	r0, 8000d02 <__swbuf_r+0x8e>
 8000cb6:	68a3      	ldr	r3, [r4, #8]
 8000cb8:	3b01      	subs	r3, #1
 8000cba:	60a3      	str	r3, [r4, #8]
 8000cbc:	6823      	ldr	r3, [r4, #0]
 8000cbe:	1c5a      	adds	r2, r3, #1
 8000cc0:	6022      	str	r2, [r4, #0]
 8000cc2:	701e      	strb	r6, [r3, #0]
 8000cc4:	6963      	ldr	r3, [r4, #20]
 8000cc6:	3001      	adds	r0, #1
 8000cc8:	4283      	cmp	r3, r0
 8000cca:	d004      	beq.n	8000cd6 <__swbuf_r+0x62>
 8000ccc:	89a3      	ldrh	r3, [r4, #12]
 8000cce:	07db      	lsls	r3, r3, #31
 8000cd0:	d519      	bpl.n	8000d06 <__swbuf_r+0x92>
 8000cd2:	2e0a      	cmp	r6, #10
 8000cd4:	d117      	bne.n	8000d06 <__swbuf_r+0x92>
 8000cd6:	4621      	mov	r1, r4
 8000cd8:	4628      	mov	r0, r5
 8000cda:	f000 f911 	bl	8000f00 <_fflush_r>
 8000cde:	b190      	cbz	r0, 8000d06 <__swbuf_r+0x92>
 8000ce0:	e00f      	b.n	8000d02 <__swbuf_r+0x8e>
 8000ce2:	4b0b      	ldr	r3, [pc, #44]	; (8000d10 <__swbuf_r+0x9c>)
 8000ce4:	429c      	cmp	r4, r3
 8000ce6:	d101      	bne.n	8000cec <__swbuf_r+0x78>
 8000ce8:	68ac      	ldr	r4, [r5, #8]
 8000cea:	e7d0      	b.n	8000c8e <__swbuf_r+0x1a>
 8000cec:	4b09      	ldr	r3, [pc, #36]	; (8000d14 <__swbuf_r+0xa0>)
 8000cee:	429c      	cmp	r4, r3
 8000cf0:	bf08      	it	eq
 8000cf2:	68ec      	ldreq	r4, [r5, #12]
 8000cf4:	e7cb      	b.n	8000c8e <__swbuf_r+0x1a>
 8000cf6:	4621      	mov	r1, r4
 8000cf8:	4628      	mov	r0, r5
 8000cfa:	f000 f80d 	bl	8000d18 <__swsetup_r>
 8000cfe:	2800      	cmp	r0, #0
 8000d00:	d0cc      	beq.n	8000c9c <__swbuf_r+0x28>
 8000d02:	f04f 37ff 	mov.w	r7, #4294967295
 8000d06:	4638      	mov	r0, r7
 8000d08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d0a:	bf00      	nop
 8000d0c:	08001624 	.word	0x08001624
 8000d10:	08001644 	.word	0x08001644
 8000d14:	08001604 	.word	0x08001604

08000d18 <__swsetup_r>:
 8000d18:	4b32      	ldr	r3, [pc, #200]	; (8000de4 <__swsetup_r+0xcc>)
 8000d1a:	b570      	push	{r4, r5, r6, lr}
 8000d1c:	681d      	ldr	r5, [r3, #0]
 8000d1e:	4606      	mov	r6, r0
 8000d20:	460c      	mov	r4, r1
 8000d22:	b125      	cbz	r5, 8000d2e <__swsetup_r+0x16>
 8000d24:	69ab      	ldr	r3, [r5, #24]
 8000d26:	b913      	cbnz	r3, 8000d2e <__swsetup_r+0x16>
 8000d28:	4628      	mov	r0, r5
 8000d2a:	f000 f953 	bl	8000fd4 <__sinit>
 8000d2e:	4b2e      	ldr	r3, [pc, #184]	; (8000de8 <__swsetup_r+0xd0>)
 8000d30:	429c      	cmp	r4, r3
 8000d32:	d10f      	bne.n	8000d54 <__swsetup_r+0x3c>
 8000d34:	686c      	ldr	r4, [r5, #4]
 8000d36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d3a:	b29a      	uxth	r2, r3
 8000d3c:	0715      	lsls	r5, r2, #28
 8000d3e:	d42c      	bmi.n	8000d9a <__swsetup_r+0x82>
 8000d40:	06d0      	lsls	r0, r2, #27
 8000d42:	d411      	bmi.n	8000d68 <__swsetup_r+0x50>
 8000d44:	2209      	movs	r2, #9
 8000d46:	6032      	str	r2, [r6, #0]
 8000d48:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d4c:	81a3      	strh	r3, [r4, #12]
 8000d4e:	f04f 30ff 	mov.w	r0, #4294967295
 8000d52:	e03e      	b.n	8000dd2 <__swsetup_r+0xba>
 8000d54:	4b25      	ldr	r3, [pc, #148]	; (8000dec <__swsetup_r+0xd4>)
 8000d56:	429c      	cmp	r4, r3
 8000d58:	d101      	bne.n	8000d5e <__swsetup_r+0x46>
 8000d5a:	68ac      	ldr	r4, [r5, #8]
 8000d5c:	e7eb      	b.n	8000d36 <__swsetup_r+0x1e>
 8000d5e:	4b24      	ldr	r3, [pc, #144]	; (8000df0 <__swsetup_r+0xd8>)
 8000d60:	429c      	cmp	r4, r3
 8000d62:	bf08      	it	eq
 8000d64:	68ec      	ldreq	r4, [r5, #12]
 8000d66:	e7e6      	b.n	8000d36 <__swsetup_r+0x1e>
 8000d68:	0751      	lsls	r1, r2, #29
 8000d6a:	d512      	bpl.n	8000d92 <__swsetup_r+0x7a>
 8000d6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000d6e:	b141      	cbz	r1, 8000d82 <__swsetup_r+0x6a>
 8000d70:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000d74:	4299      	cmp	r1, r3
 8000d76:	d002      	beq.n	8000d7e <__swsetup_r+0x66>
 8000d78:	4630      	mov	r0, r6
 8000d7a:	f000 fa19 	bl	80011b0 <_free_r>
 8000d7e:	2300      	movs	r3, #0
 8000d80:	6363      	str	r3, [r4, #52]	; 0x34
 8000d82:	89a3      	ldrh	r3, [r4, #12]
 8000d84:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000d88:	81a3      	strh	r3, [r4, #12]
 8000d8a:	2300      	movs	r3, #0
 8000d8c:	6063      	str	r3, [r4, #4]
 8000d8e:	6923      	ldr	r3, [r4, #16]
 8000d90:	6023      	str	r3, [r4, #0]
 8000d92:	89a3      	ldrh	r3, [r4, #12]
 8000d94:	f043 0308 	orr.w	r3, r3, #8
 8000d98:	81a3      	strh	r3, [r4, #12]
 8000d9a:	6923      	ldr	r3, [r4, #16]
 8000d9c:	b94b      	cbnz	r3, 8000db2 <__swsetup_r+0x9a>
 8000d9e:	89a3      	ldrh	r3, [r4, #12]
 8000da0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000da4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000da8:	d003      	beq.n	8000db2 <__swsetup_r+0x9a>
 8000daa:	4621      	mov	r1, r4
 8000dac:	4630      	mov	r0, r6
 8000dae:	f000 f9bf 	bl	8001130 <__smakebuf_r>
 8000db2:	89a2      	ldrh	r2, [r4, #12]
 8000db4:	f012 0301 	ands.w	r3, r2, #1
 8000db8:	d00c      	beq.n	8000dd4 <__swsetup_r+0xbc>
 8000dba:	2300      	movs	r3, #0
 8000dbc:	60a3      	str	r3, [r4, #8]
 8000dbe:	6963      	ldr	r3, [r4, #20]
 8000dc0:	425b      	negs	r3, r3
 8000dc2:	61a3      	str	r3, [r4, #24]
 8000dc4:	6923      	ldr	r3, [r4, #16]
 8000dc6:	b953      	cbnz	r3, 8000dde <__swsetup_r+0xc6>
 8000dc8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000dcc:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000dd0:	d1ba      	bne.n	8000d48 <__swsetup_r+0x30>
 8000dd2:	bd70      	pop	{r4, r5, r6, pc}
 8000dd4:	0792      	lsls	r2, r2, #30
 8000dd6:	bf58      	it	pl
 8000dd8:	6963      	ldrpl	r3, [r4, #20]
 8000dda:	60a3      	str	r3, [r4, #8]
 8000ddc:	e7f2      	b.n	8000dc4 <__swsetup_r+0xac>
 8000dde:	2000      	movs	r0, #0
 8000de0:	e7f7      	b.n	8000dd2 <__swsetup_r+0xba>
 8000de2:	bf00      	nop
 8000de4:	20000004 	.word	0x20000004
 8000de8:	08001624 	.word	0x08001624
 8000dec:	08001644 	.word	0x08001644
 8000df0:	08001604 	.word	0x08001604

08000df4 <__sflush_r>:
 8000df4:	898a      	ldrh	r2, [r1, #12]
 8000df6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000dfa:	4605      	mov	r5, r0
 8000dfc:	0710      	lsls	r0, r2, #28
 8000dfe:	460c      	mov	r4, r1
 8000e00:	d458      	bmi.n	8000eb4 <__sflush_r+0xc0>
 8000e02:	684b      	ldr	r3, [r1, #4]
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	dc05      	bgt.n	8000e14 <__sflush_r+0x20>
 8000e08:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000e0a:	2b00      	cmp	r3, #0
 8000e0c:	dc02      	bgt.n	8000e14 <__sflush_r+0x20>
 8000e0e:	2000      	movs	r0, #0
 8000e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e14:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e16:	2e00      	cmp	r6, #0
 8000e18:	d0f9      	beq.n	8000e0e <__sflush_r+0x1a>
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000e20:	682f      	ldr	r7, [r5, #0]
 8000e22:	6a21      	ldr	r1, [r4, #32]
 8000e24:	602b      	str	r3, [r5, #0]
 8000e26:	d032      	beq.n	8000e8e <__sflush_r+0x9a>
 8000e28:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000e2a:	89a3      	ldrh	r3, [r4, #12]
 8000e2c:	075a      	lsls	r2, r3, #29
 8000e2e:	d505      	bpl.n	8000e3c <__sflush_r+0x48>
 8000e30:	6863      	ldr	r3, [r4, #4]
 8000e32:	1ac0      	subs	r0, r0, r3
 8000e34:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000e36:	b10b      	cbz	r3, 8000e3c <__sflush_r+0x48>
 8000e38:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000e3a:	1ac0      	subs	r0, r0, r3
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	4602      	mov	r2, r0
 8000e40:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e42:	6a21      	ldr	r1, [r4, #32]
 8000e44:	4628      	mov	r0, r5
 8000e46:	47b0      	blx	r6
 8000e48:	1c43      	adds	r3, r0, #1
 8000e4a:	89a3      	ldrh	r3, [r4, #12]
 8000e4c:	d106      	bne.n	8000e5c <__sflush_r+0x68>
 8000e4e:	6829      	ldr	r1, [r5, #0]
 8000e50:	291d      	cmp	r1, #29
 8000e52:	d848      	bhi.n	8000ee6 <__sflush_r+0xf2>
 8000e54:	4a29      	ldr	r2, [pc, #164]	; (8000efc <__sflush_r+0x108>)
 8000e56:	40ca      	lsrs	r2, r1
 8000e58:	07d6      	lsls	r6, r2, #31
 8000e5a:	d544      	bpl.n	8000ee6 <__sflush_r+0xf2>
 8000e5c:	2200      	movs	r2, #0
 8000e5e:	6062      	str	r2, [r4, #4]
 8000e60:	04d9      	lsls	r1, r3, #19
 8000e62:	6922      	ldr	r2, [r4, #16]
 8000e64:	6022      	str	r2, [r4, #0]
 8000e66:	d504      	bpl.n	8000e72 <__sflush_r+0x7e>
 8000e68:	1c42      	adds	r2, r0, #1
 8000e6a:	d101      	bne.n	8000e70 <__sflush_r+0x7c>
 8000e6c:	682b      	ldr	r3, [r5, #0]
 8000e6e:	b903      	cbnz	r3, 8000e72 <__sflush_r+0x7e>
 8000e70:	6560      	str	r0, [r4, #84]	; 0x54
 8000e72:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e74:	602f      	str	r7, [r5, #0]
 8000e76:	2900      	cmp	r1, #0
 8000e78:	d0c9      	beq.n	8000e0e <__sflush_r+0x1a>
 8000e7a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e7e:	4299      	cmp	r1, r3
 8000e80:	d002      	beq.n	8000e88 <__sflush_r+0x94>
 8000e82:	4628      	mov	r0, r5
 8000e84:	f000 f994 	bl	80011b0 <_free_r>
 8000e88:	2000      	movs	r0, #0
 8000e8a:	6360      	str	r0, [r4, #52]	; 0x34
 8000e8c:	e7c0      	b.n	8000e10 <__sflush_r+0x1c>
 8000e8e:	2301      	movs	r3, #1
 8000e90:	4628      	mov	r0, r5
 8000e92:	47b0      	blx	r6
 8000e94:	1c41      	adds	r1, r0, #1
 8000e96:	d1c8      	bne.n	8000e2a <__sflush_r+0x36>
 8000e98:	682b      	ldr	r3, [r5, #0]
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	d0c5      	beq.n	8000e2a <__sflush_r+0x36>
 8000e9e:	2b1d      	cmp	r3, #29
 8000ea0:	d001      	beq.n	8000ea6 <__sflush_r+0xb2>
 8000ea2:	2b16      	cmp	r3, #22
 8000ea4:	d101      	bne.n	8000eaa <__sflush_r+0xb6>
 8000ea6:	602f      	str	r7, [r5, #0]
 8000ea8:	e7b1      	b.n	8000e0e <__sflush_r+0x1a>
 8000eaa:	89a3      	ldrh	r3, [r4, #12]
 8000eac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000eb0:	81a3      	strh	r3, [r4, #12]
 8000eb2:	e7ad      	b.n	8000e10 <__sflush_r+0x1c>
 8000eb4:	690f      	ldr	r7, [r1, #16]
 8000eb6:	2f00      	cmp	r7, #0
 8000eb8:	d0a9      	beq.n	8000e0e <__sflush_r+0x1a>
 8000eba:	0793      	lsls	r3, r2, #30
 8000ebc:	680e      	ldr	r6, [r1, #0]
 8000ebe:	bf08      	it	eq
 8000ec0:	694b      	ldreq	r3, [r1, #20]
 8000ec2:	600f      	str	r7, [r1, #0]
 8000ec4:	bf18      	it	ne
 8000ec6:	2300      	movne	r3, #0
 8000ec8:	eba6 0807 	sub.w	r8, r6, r7
 8000ecc:	608b      	str	r3, [r1, #8]
 8000ece:	f1b8 0f00 	cmp.w	r8, #0
 8000ed2:	dd9c      	ble.n	8000e0e <__sflush_r+0x1a>
 8000ed4:	4643      	mov	r3, r8
 8000ed6:	463a      	mov	r2, r7
 8000ed8:	6a21      	ldr	r1, [r4, #32]
 8000eda:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000edc:	4628      	mov	r0, r5
 8000ede:	47b0      	blx	r6
 8000ee0:	2800      	cmp	r0, #0
 8000ee2:	dc06      	bgt.n	8000ef2 <__sflush_r+0xfe>
 8000ee4:	89a3      	ldrh	r3, [r4, #12]
 8000ee6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000eea:	81a3      	strh	r3, [r4, #12]
 8000eec:	f04f 30ff 	mov.w	r0, #4294967295
 8000ef0:	e78e      	b.n	8000e10 <__sflush_r+0x1c>
 8000ef2:	4407      	add	r7, r0
 8000ef4:	eba8 0800 	sub.w	r8, r8, r0
 8000ef8:	e7e9      	b.n	8000ece <__sflush_r+0xda>
 8000efa:	bf00      	nop
 8000efc:	20400001 	.word	0x20400001

08000f00 <_fflush_r>:
 8000f00:	b538      	push	{r3, r4, r5, lr}
 8000f02:	690b      	ldr	r3, [r1, #16]
 8000f04:	4605      	mov	r5, r0
 8000f06:	460c      	mov	r4, r1
 8000f08:	b1db      	cbz	r3, 8000f42 <_fflush_r+0x42>
 8000f0a:	b118      	cbz	r0, 8000f14 <_fflush_r+0x14>
 8000f0c:	6983      	ldr	r3, [r0, #24]
 8000f0e:	b90b      	cbnz	r3, 8000f14 <_fflush_r+0x14>
 8000f10:	f000 f860 	bl	8000fd4 <__sinit>
 8000f14:	4b0c      	ldr	r3, [pc, #48]	; (8000f48 <_fflush_r+0x48>)
 8000f16:	429c      	cmp	r4, r3
 8000f18:	d109      	bne.n	8000f2e <_fflush_r+0x2e>
 8000f1a:	686c      	ldr	r4, [r5, #4]
 8000f1c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f20:	b17b      	cbz	r3, 8000f42 <_fflush_r+0x42>
 8000f22:	4621      	mov	r1, r4
 8000f24:	4628      	mov	r0, r5
 8000f26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f2a:	f7ff bf63 	b.w	8000df4 <__sflush_r>
 8000f2e:	4b07      	ldr	r3, [pc, #28]	; (8000f4c <_fflush_r+0x4c>)
 8000f30:	429c      	cmp	r4, r3
 8000f32:	d101      	bne.n	8000f38 <_fflush_r+0x38>
 8000f34:	68ac      	ldr	r4, [r5, #8]
 8000f36:	e7f1      	b.n	8000f1c <_fflush_r+0x1c>
 8000f38:	4b05      	ldr	r3, [pc, #20]	; (8000f50 <_fflush_r+0x50>)
 8000f3a:	429c      	cmp	r4, r3
 8000f3c:	bf08      	it	eq
 8000f3e:	68ec      	ldreq	r4, [r5, #12]
 8000f40:	e7ec      	b.n	8000f1c <_fflush_r+0x1c>
 8000f42:	2000      	movs	r0, #0
 8000f44:	bd38      	pop	{r3, r4, r5, pc}
 8000f46:	bf00      	nop
 8000f48:	08001624 	.word	0x08001624
 8000f4c:	08001644 	.word	0x08001644
 8000f50:	08001604 	.word	0x08001604

08000f54 <std>:
 8000f54:	2300      	movs	r3, #0
 8000f56:	b510      	push	{r4, lr}
 8000f58:	4604      	mov	r4, r0
 8000f5a:	e9c0 3300 	strd	r3, r3, [r0]
 8000f5e:	6083      	str	r3, [r0, #8]
 8000f60:	8181      	strh	r1, [r0, #12]
 8000f62:	6643      	str	r3, [r0, #100]	; 0x64
 8000f64:	81c2      	strh	r2, [r0, #14]
 8000f66:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000f6a:	6183      	str	r3, [r0, #24]
 8000f6c:	4619      	mov	r1, r3
 8000f6e:	2208      	movs	r2, #8
 8000f70:	305c      	adds	r0, #92	; 0x5c
 8000f72:	f7ff fb79 	bl	8000668 <memset>
 8000f76:	4b05      	ldr	r3, [pc, #20]	; (8000f8c <std+0x38>)
 8000f78:	6263      	str	r3, [r4, #36]	; 0x24
 8000f7a:	4b05      	ldr	r3, [pc, #20]	; (8000f90 <std+0x3c>)
 8000f7c:	62a3      	str	r3, [r4, #40]	; 0x28
 8000f7e:	4b05      	ldr	r3, [pc, #20]	; (8000f94 <std+0x40>)
 8000f80:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f82:	4b05      	ldr	r3, [pc, #20]	; (8000f98 <std+0x44>)
 8000f84:	6224      	str	r4, [r4, #32]
 8000f86:	6323      	str	r3, [r4, #48]	; 0x30
 8000f88:	bd10      	pop	{r4, pc}
 8000f8a:	bf00      	nop
 8000f8c:	0800138d 	.word	0x0800138d
 8000f90:	080013af 	.word	0x080013af
 8000f94:	080013e7 	.word	0x080013e7
 8000f98:	0800140b 	.word	0x0800140b

08000f9c <_cleanup_r>:
 8000f9c:	4901      	ldr	r1, [pc, #4]	; (8000fa4 <_cleanup_r+0x8>)
 8000f9e:	f000 b885 	b.w	80010ac <_fwalk_reent>
 8000fa2:	bf00      	nop
 8000fa4:	08000f01 	.word	0x08000f01

08000fa8 <__sfmoreglue>:
 8000fa8:	b570      	push	{r4, r5, r6, lr}
 8000faa:	1e4a      	subs	r2, r1, #1
 8000fac:	2568      	movs	r5, #104	; 0x68
 8000fae:	4355      	muls	r5, r2
 8000fb0:	460e      	mov	r6, r1
 8000fb2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000fb6:	f000 f949 	bl	800124c <_malloc_r>
 8000fba:	4604      	mov	r4, r0
 8000fbc:	b140      	cbz	r0, 8000fd0 <__sfmoreglue+0x28>
 8000fbe:	2100      	movs	r1, #0
 8000fc0:	e9c0 1600 	strd	r1, r6, [r0]
 8000fc4:	300c      	adds	r0, #12
 8000fc6:	60a0      	str	r0, [r4, #8]
 8000fc8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000fcc:	f7ff fb4c 	bl	8000668 <memset>
 8000fd0:	4620      	mov	r0, r4
 8000fd2:	bd70      	pop	{r4, r5, r6, pc}

08000fd4 <__sinit>:
 8000fd4:	6983      	ldr	r3, [r0, #24]
 8000fd6:	b510      	push	{r4, lr}
 8000fd8:	4604      	mov	r4, r0
 8000fda:	bb33      	cbnz	r3, 800102a <__sinit+0x56>
 8000fdc:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000fe0:	6503      	str	r3, [r0, #80]	; 0x50
 8000fe2:	4b12      	ldr	r3, [pc, #72]	; (800102c <__sinit+0x58>)
 8000fe4:	4a12      	ldr	r2, [pc, #72]	; (8001030 <__sinit+0x5c>)
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	6282      	str	r2, [r0, #40]	; 0x28
 8000fea:	4298      	cmp	r0, r3
 8000fec:	bf04      	itt	eq
 8000fee:	2301      	moveq	r3, #1
 8000ff0:	6183      	streq	r3, [r0, #24]
 8000ff2:	f000 f81f 	bl	8001034 <__sfp>
 8000ff6:	6060      	str	r0, [r4, #4]
 8000ff8:	4620      	mov	r0, r4
 8000ffa:	f000 f81b 	bl	8001034 <__sfp>
 8000ffe:	60a0      	str	r0, [r4, #8]
 8001000:	4620      	mov	r0, r4
 8001002:	f000 f817 	bl	8001034 <__sfp>
 8001006:	2200      	movs	r2, #0
 8001008:	60e0      	str	r0, [r4, #12]
 800100a:	2104      	movs	r1, #4
 800100c:	6860      	ldr	r0, [r4, #4]
 800100e:	f7ff ffa1 	bl	8000f54 <std>
 8001012:	2201      	movs	r2, #1
 8001014:	2109      	movs	r1, #9
 8001016:	68a0      	ldr	r0, [r4, #8]
 8001018:	f7ff ff9c 	bl	8000f54 <std>
 800101c:	2202      	movs	r2, #2
 800101e:	2112      	movs	r1, #18
 8001020:	68e0      	ldr	r0, [r4, #12]
 8001022:	f7ff ff97 	bl	8000f54 <std>
 8001026:	2301      	movs	r3, #1
 8001028:	61a3      	str	r3, [r4, #24]
 800102a:	bd10      	pop	{r4, pc}
 800102c:	080015cc 	.word	0x080015cc
 8001030:	08000f9d 	.word	0x08000f9d

08001034 <__sfp>:
 8001034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001036:	4b1b      	ldr	r3, [pc, #108]	; (80010a4 <__sfp+0x70>)
 8001038:	681e      	ldr	r6, [r3, #0]
 800103a:	69b3      	ldr	r3, [r6, #24]
 800103c:	4607      	mov	r7, r0
 800103e:	b913      	cbnz	r3, 8001046 <__sfp+0x12>
 8001040:	4630      	mov	r0, r6
 8001042:	f7ff ffc7 	bl	8000fd4 <__sinit>
 8001046:	3648      	adds	r6, #72	; 0x48
 8001048:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800104c:	3b01      	subs	r3, #1
 800104e:	d503      	bpl.n	8001058 <__sfp+0x24>
 8001050:	6833      	ldr	r3, [r6, #0]
 8001052:	b133      	cbz	r3, 8001062 <__sfp+0x2e>
 8001054:	6836      	ldr	r6, [r6, #0]
 8001056:	e7f7      	b.n	8001048 <__sfp+0x14>
 8001058:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800105c:	b16d      	cbz	r5, 800107a <__sfp+0x46>
 800105e:	3468      	adds	r4, #104	; 0x68
 8001060:	e7f4      	b.n	800104c <__sfp+0x18>
 8001062:	2104      	movs	r1, #4
 8001064:	4638      	mov	r0, r7
 8001066:	f7ff ff9f 	bl	8000fa8 <__sfmoreglue>
 800106a:	6030      	str	r0, [r6, #0]
 800106c:	2800      	cmp	r0, #0
 800106e:	d1f1      	bne.n	8001054 <__sfp+0x20>
 8001070:	230c      	movs	r3, #12
 8001072:	603b      	str	r3, [r7, #0]
 8001074:	4604      	mov	r4, r0
 8001076:	4620      	mov	r0, r4
 8001078:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800107a:	4b0b      	ldr	r3, [pc, #44]	; (80010a8 <__sfp+0x74>)
 800107c:	6665      	str	r5, [r4, #100]	; 0x64
 800107e:	e9c4 5500 	strd	r5, r5, [r4]
 8001082:	60a5      	str	r5, [r4, #8]
 8001084:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8001088:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800108c:	2208      	movs	r2, #8
 800108e:	4629      	mov	r1, r5
 8001090:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001094:	f7ff fae8 	bl	8000668 <memset>
 8001098:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800109c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80010a0:	e7e9      	b.n	8001076 <__sfp+0x42>
 80010a2:	bf00      	nop
 80010a4:	080015cc 	.word	0x080015cc
 80010a8:	ffff0001 	.word	0xffff0001

080010ac <_fwalk_reent>:
 80010ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80010b0:	4680      	mov	r8, r0
 80010b2:	4689      	mov	r9, r1
 80010b4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80010b8:	2600      	movs	r6, #0
 80010ba:	b914      	cbnz	r4, 80010c2 <_fwalk_reent+0x16>
 80010bc:	4630      	mov	r0, r6
 80010be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80010c2:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80010c6:	3f01      	subs	r7, #1
 80010c8:	d501      	bpl.n	80010ce <_fwalk_reent+0x22>
 80010ca:	6824      	ldr	r4, [r4, #0]
 80010cc:	e7f5      	b.n	80010ba <_fwalk_reent+0xe>
 80010ce:	89ab      	ldrh	r3, [r5, #12]
 80010d0:	2b01      	cmp	r3, #1
 80010d2:	d907      	bls.n	80010e4 <_fwalk_reent+0x38>
 80010d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80010d8:	3301      	adds	r3, #1
 80010da:	d003      	beq.n	80010e4 <_fwalk_reent+0x38>
 80010dc:	4629      	mov	r1, r5
 80010de:	4640      	mov	r0, r8
 80010e0:	47c8      	blx	r9
 80010e2:	4306      	orrs	r6, r0
 80010e4:	3568      	adds	r5, #104	; 0x68
 80010e6:	e7ee      	b.n	80010c6 <_fwalk_reent+0x1a>

080010e8 <__swhatbuf_r>:
 80010e8:	b570      	push	{r4, r5, r6, lr}
 80010ea:	460e      	mov	r6, r1
 80010ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010f0:	2900      	cmp	r1, #0
 80010f2:	b096      	sub	sp, #88	; 0x58
 80010f4:	4614      	mov	r4, r2
 80010f6:	461d      	mov	r5, r3
 80010f8:	da07      	bge.n	800110a <__swhatbuf_r+0x22>
 80010fa:	2300      	movs	r3, #0
 80010fc:	602b      	str	r3, [r5, #0]
 80010fe:	89b3      	ldrh	r3, [r6, #12]
 8001100:	061a      	lsls	r2, r3, #24
 8001102:	d410      	bmi.n	8001126 <__swhatbuf_r+0x3e>
 8001104:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001108:	e00e      	b.n	8001128 <__swhatbuf_r+0x40>
 800110a:	466a      	mov	r2, sp
 800110c:	f000 f9a4 	bl	8001458 <_fstat_r>
 8001110:	2800      	cmp	r0, #0
 8001112:	dbf2      	blt.n	80010fa <__swhatbuf_r+0x12>
 8001114:	9a01      	ldr	r2, [sp, #4]
 8001116:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800111a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800111e:	425a      	negs	r2, r3
 8001120:	415a      	adcs	r2, r3
 8001122:	602a      	str	r2, [r5, #0]
 8001124:	e7ee      	b.n	8001104 <__swhatbuf_r+0x1c>
 8001126:	2340      	movs	r3, #64	; 0x40
 8001128:	2000      	movs	r0, #0
 800112a:	6023      	str	r3, [r4, #0]
 800112c:	b016      	add	sp, #88	; 0x58
 800112e:	bd70      	pop	{r4, r5, r6, pc}

08001130 <__smakebuf_r>:
 8001130:	898b      	ldrh	r3, [r1, #12]
 8001132:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001134:	079d      	lsls	r5, r3, #30
 8001136:	4606      	mov	r6, r0
 8001138:	460c      	mov	r4, r1
 800113a:	d507      	bpl.n	800114c <__smakebuf_r+0x1c>
 800113c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001140:	6023      	str	r3, [r4, #0]
 8001142:	6123      	str	r3, [r4, #16]
 8001144:	2301      	movs	r3, #1
 8001146:	6163      	str	r3, [r4, #20]
 8001148:	b002      	add	sp, #8
 800114a:	bd70      	pop	{r4, r5, r6, pc}
 800114c:	ab01      	add	r3, sp, #4
 800114e:	466a      	mov	r2, sp
 8001150:	f7ff ffca 	bl	80010e8 <__swhatbuf_r>
 8001154:	9900      	ldr	r1, [sp, #0]
 8001156:	4605      	mov	r5, r0
 8001158:	4630      	mov	r0, r6
 800115a:	f000 f877 	bl	800124c <_malloc_r>
 800115e:	b948      	cbnz	r0, 8001174 <__smakebuf_r+0x44>
 8001160:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001164:	059a      	lsls	r2, r3, #22
 8001166:	d4ef      	bmi.n	8001148 <__smakebuf_r+0x18>
 8001168:	f023 0303 	bic.w	r3, r3, #3
 800116c:	f043 0302 	orr.w	r3, r3, #2
 8001170:	81a3      	strh	r3, [r4, #12]
 8001172:	e7e3      	b.n	800113c <__smakebuf_r+0xc>
 8001174:	4b0d      	ldr	r3, [pc, #52]	; (80011ac <__smakebuf_r+0x7c>)
 8001176:	62b3      	str	r3, [r6, #40]	; 0x28
 8001178:	89a3      	ldrh	r3, [r4, #12]
 800117a:	6020      	str	r0, [r4, #0]
 800117c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001180:	81a3      	strh	r3, [r4, #12]
 8001182:	9b00      	ldr	r3, [sp, #0]
 8001184:	6163      	str	r3, [r4, #20]
 8001186:	9b01      	ldr	r3, [sp, #4]
 8001188:	6120      	str	r0, [r4, #16]
 800118a:	b15b      	cbz	r3, 80011a4 <__smakebuf_r+0x74>
 800118c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001190:	4630      	mov	r0, r6
 8001192:	f000 f973 	bl	800147c <_isatty_r>
 8001196:	b128      	cbz	r0, 80011a4 <__smakebuf_r+0x74>
 8001198:	89a3      	ldrh	r3, [r4, #12]
 800119a:	f023 0303 	bic.w	r3, r3, #3
 800119e:	f043 0301 	orr.w	r3, r3, #1
 80011a2:	81a3      	strh	r3, [r4, #12]
 80011a4:	89a3      	ldrh	r3, [r4, #12]
 80011a6:	431d      	orrs	r5, r3
 80011a8:	81a5      	strh	r5, [r4, #12]
 80011aa:	e7cd      	b.n	8001148 <__smakebuf_r+0x18>
 80011ac:	08000f9d 	.word	0x08000f9d

080011b0 <_free_r>:
 80011b0:	b538      	push	{r3, r4, r5, lr}
 80011b2:	4605      	mov	r5, r0
 80011b4:	2900      	cmp	r1, #0
 80011b6:	d045      	beq.n	8001244 <_free_r+0x94>
 80011b8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80011bc:	1f0c      	subs	r4, r1, #4
 80011be:	2b00      	cmp	r3, #0
 80011c0:	bfb8      	it	lt
 80011c2:	18e4      	addlt	r4, r4, r3
 80011c4:	f000 f97c 	bl	80014c0 <__malloc_lock>
 80011c8:	4a1f      	ldr	r2, [pc, #124]	; (8001248 <_free_r+0x98>)
 80011ca:	6813      	ldr	r3, [r2, #0]
 80011cc:	4610      	mov	r0, r2
 80011ce:	b933      	cbnz	r3, 80011de <_free_r+0x2e>
 80011d0:	6063      	str	r3, [r4, #4]
 80011d2:	6014      	str	r4, [r2, #0]
 80011d4:	4628      	mov	r0, r5
 80011d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011da:	f000 b972 	b.w	80014c2 <__malloc_unlock>
 80011de:	42a3      	cmp	r3, r4
 80011e0:	d90c      	bls.n	80011fc <_free_r+0x4c>
 80011e2:	6821      	ldr	r1, [r4, #0]
 80011e4:	1862      	adds	r2, r4, r1
 80011e6:	4293      	cmp	r3, r2
 80011e8:	bf04      	itt	eq
 80011ea:	681a      	ldreq	r2, [r3, #0]
 80011ec:	685b      	ldreq	r3, [r3, #4]
 80011ee:	6063      	str	r3, [r4, #4]
 80011f0:	bf04      	itt	eq
 80011f2:	1852      	addeq	r2, r2, r1
 80011f4:	6022      	streq	r2, [r4, #0]
 80011f6:	6004      	str	r4, [r0, #0]
 80011f8:	e7ec      	b.n	80011d4 <_free_r+0x24>
 80011fa:	4613      	mov	r3, r2
 80011fc:	685a      	ldr	r2, [r3, #4]
 80011fe:	b10a      	cbz	r2, 8001204 <_free_r+0x54>
 8001200:	42a2      	cmp	r2, r4
 8001202:	d9fa      	bls.n	80011fa <_free_r+0x4a>
 8001204:	6819      	ldr	r1, [r3, #0]
 8001206:	1858      	adds	r0, r3, r1
 8001208:	42a0      	cmp	r0, r4
 800120a:	d10b      	bne.n	8001224 <_free_r+0x74>
 800120c:	6820      	ldr	r0, [r4, #0]
 800120e:	4401      	add	r1, r0
 8001210:	1858      	adds	r0, r3, r1
 8001212:	4282      	cmp	r2, r0
 8001214:	6019      	str	r1, [r3, #0]
 8001216:	d1dd      	bne.n	80011d4 <_free_r+0x24>
 8001218:	6810      	ldr	r0, [r2, #0]
 800121a:	6852      	ldr	r2, [r2, #4]
 800121c:	605a      	str	r2, [r3, #4]
 800121e:	4401      	add	r1, r0
 8001220:	6019      	str	r1, [r3, #0]
 8001222:	e7d7      	b.n	80011d4 <_free_r+0x24>
 8001224:	d902      	bls.n	800122c <_free_r+0x7c>
 8001226:	230c      	movs	r3, #12
 8001228:	602b      	str	r3, [r5, #0]
 800122a:	e7d3      	b.n	80011d4 <_free_r+0x24>
 800122c:	6820      	ldr	r0, [r4, #0]
 800122e:	1821      	adds	r1, r4, r0
 8001230:	428a      	cmp	r2, r1
 8001232:	bf04      	itt	eq
 8001234:	6811      	ldreq	r1, [r2, #0]
 8001236:	6852      	ldreq	r2, [r2, #4]
 8001238:	6062      	str	r2, [r4, #4]
 800123a:	bf04      	itt	eq
 800123c:	1809      	addeq	r1, r1, r0
 800123e:	6021      	streq	r1, [r4, #0]
 8001240:	605c      	str	r4, [r3, #4]
 8001242:	e7c7      	b.n	80011d4 <_free_r+0x24>
 8001244:	bd38      	pop	{r3, r4, r5, pc}
 8001246:	bf00      	nop
 8001248:	20000084 	.word	0x20000084

0800124c <_malloc_r>:
 800124c:	b570      	push	{r4, r5, r6, lr}
 800124e:	1ccd      	adds	r5, r1, #3
 8001250:	f025 0503 	bic.w	r5, r5, #3
 8001254:	3508      	adds	r5, #8
 8001256:	2d0c      	cmp	r5, #12
 8001258:	bf38      	it	cc
 800125a:	250c      	movcc	r5, #12
 800125c:	2d00      	cmp	r5, #0
 800125e:	4606      	mov	r6, r0
 8001260:	db01      	blt.n	8001266 <_malloc_r+0x1a>
 8001262:	42a9      	cmp	r1, r5
 8001264:	d903      	bls.n	800126e <_malloc_r+0x22>
 8001266:	230c      	movs	r3, #12
 8001268:	6033      	str	r3, [r6, #0]
 800126a:	2000      	movs	r0, #0
 800126c:	bd70      	pop	{r4, r5, r6, pc}
 800126e:	f000 f927 	bl	80014c0 <__malloc_lock>
 8001272:	4a21      	ldr	r2, [pc, #132]	; (80012f8 <_malloc_r+0xac>)
 8001274:	6814      	ldr	r4, [r2, #0]
 8001276:	4621      	mov	r1, r4
 8001278:	b991      	cbnz	r1, 80012a0 <_malloc_r+0x54>
 800127a:	4c20      	ldr	r4, [pc, #128]	; (80012fc <_malloc_r+0xb0>)
 800127c:	6823      	ldr	r3, [r4, #0]
 800127e:	b91b      	cbnz	r3, 8001288 <_malloc_r+0x3c>
 8001280:	4630      	mov	r0, r6
 8001282:	f000 f873 	bl	800136c <_sbrk_r>
 8001286:	6020      	str	r0, [r4, #0]
 8001288:	4629      	mov	r1, r5
 800128a:	4630      	mov	r0, r6
 800128c:	f000 f86e 	bl	800136c <_sbrk_r>
 8001290:	1c43      	adds	r3, r0, #1
 8001292:	d124      	bne.n	80012de <_malloc_r+0x92>
 8001294:	230c      	movs	r3, #12
 8001296:	6033      	str	r3, [r6, #0]
 8001298:	4630      	mov	r0, r6
 800129a:	f000 f912 	bl	80014c2 <__malloc_unlock>
 800129e:	e7e4      	b.n	800126a <_malloc_r+0x1e>
 80012a0:	680b      	ldr	r3, [r1, #0]
 80012a2:	1b5b      	subs	r3, r3, r5
 80012a4:	d418      	bmi.n	80012d8 <_malloc_r+0x8c>
 80012a6:	2b0b      	cmp	r3, #11
 80012a8:	d90f      	bls.n	80012ca <_malloc_r+0x7e>
 80012aa:	600b      	str	r3, [r1, #0]
 80012ac:	50cd      	str	r5, [r1, r3]
 80012ae:	18cc      	adds	r4, r1, r3
 80012b0:	4630      	mov	r0, r6
 80012b2:	f000 f906 	bl	80014c2 <__malloc_unlock>
 80012b6:	f104 000b 	add.w	r0, r4, #11
 80012ba:	1d23      	adds	r3, r4, #4
 80012bc:	f020 0007 	bic.w	r0, r0, #7
 80012c0:	1ac3      	subs	r3, r0, r3
 80012c2:	d0d3      	beq.n	800126c <_malloc_r+0x20>
 80012c4:	425a      	negs	r2, r3
 80012c6:	50e2      	str	r2, [r4, r3]
 80012c8:	e7d0      	b.n	800126c <_malloc_r+0x20>
 80012ca:	428c      	cmp	r4, r1
 80012cc:	684b      	ldr	r3, [r1, #4]
 80012ce:	bf16      	itet	ne
 80012d0:	6063      	strne	r3, [r4, #4]
 80012d2:	6013      	streq	r3, [r2, #0]
 80012d4:	460c      	movne	r4, r1
 80012d6:	e7eb      	b.n	80012b0 <_malloc_r+0x64>
 80012d8:	460c      	mov	r4, r1
 80012da:	6849      	ldr	r1, [r1, #4]
 80012dc:	e7cc      	b.n	8001278 <_malloc_r+0x2c>
 80012de:	1cc4      	adds	r4, r0, #3
 80012e0:	f024 0403 	bic.w	r4, r4, #3
 80012e4:	42a0      	cmp	r0, r4
 80012e6:	d005      	beq.n	80012f4 <_malloc_r+0xa8>
 80012e8:	1a21      	subs	r1, r4, r0
 80012ea:	4630      	mov	r0, r6
 80012ec:	f000 f83e 	bl	800136c <_sbrk_r>
 80012f0:	3001      	adds	r0, #1
 80012f2:	d0cf      	beq.n	8001294 <_malloc_r+0x48>
 80012f4:	6025      	str	r5, [r4, #0]
 80012f6:	e7db      	b.n	80012b0 <_malloc_r+0x64>
 80012f8:	20000084 	.word	0x20000084
 80012fc:	20000088 	.word	0x20000088

08001300 <_putc_r>:
 8001300:	b570      	push	{r4, r5, r6, lr}
 8001302:	460d      	mov	r5, r1
 8001304:	4614      	mov	r4, r2
 8001306:	4606      	mov	r6, r0
 8001308:	b118      	cbz	r0, 8001312 <_putc_r+0x12>
 800130a:	6983      	ldr	r3, [r0, #24]
 800130c:	b90b      	cbnz	r3, 8001312 <_putc_r+0x12>
 800130e:	f7ff fe61 	bl	8000fd4 <__sinit>
 8001312:	4b13      	ldr	r3, [pc, #76]	; (8001360 <_putc_r+0x60>)
 8001314:	429c      	cmp	r4, r3
 8001316:	d112      	bne.n	800133e <_putc_r+0x3e>
 8001318:	6874      	ldr	r4, [r6, #4]
 800131a:	68a3      	ldr	r3, [r4, #8]
 800131c:	3b01      	subs	r3, #1
 800131e:	2b00      	cmp	r3, #0
 8001320:	60a3      	str	r3, [r4, #8]
 8001322:	da16      	bge.n	8001352 <_putc_r+0x52>
 8001324:	69a2      	ldr	r2, [r4, #24]
 8001326:	4293      	cmp	r3, r2
 8001328:	db02      	blt.n	8001330 <_putc_r+0x30>
 800132a:	b2eb      	uxtb	r3, r5
 800132c:	2b0a      	cmp	r3, #10
 800132e:	d110      	bne.n	8001352 <_putc_r+0x52>
 8001330:	4622      	mov	r2, r4
 8001332:	4629      	mov	r1, r5
 8001334:	4630      	mov	r0, r6
 8001336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800133a:	f7ff bc9b 	b.w	8000c74 <__swbuf_r>
 800133e:	4b09      	ldr	r3, [pc, #36]	; (8001364 <_putc_r+0x64>)
 8001340:	429c      	cmp	r4, r3
 8001342:	d101      	bne.n	8001348 <_putc_r+0x48>
 8001344:	68b4      	ldr	r4, [r6, #8]
 8001346:	e7e8      	b.n	800131a <_putc_r+0x1a>
 8001348:	4b07      	ldr	r3, [pc, #28]	; (8001368 <_putc_r+0x68>)
 800134a:	429c      	cmp	r4, r3
 800134c:	bf08      	it	eq
 800134e:	68f4      	ldreq	r4, [r6, #12]
 8001350:	e7e3      	b.n	800131a <_putc_r+0x1a>
 8001352:	6823      	ldr	r3, [r4, #0]
 8001354:	1c5a      	adds	r2, r3, #1
 8001356:	6022      	str	r2, [r4, #0]
 8001358:	701d      	strb	r5, [r3, #0]
 800135a:	b2e8      	uxtb	r0, r5
 800135c:	bd70      	pop	{r4, r5, r6, pc}
 800135e:	bf00      	nop
 8001360:	08001624 	.word	0x08001624
 8001364:	08001644 	.word	0x08001644
 8001368:	08001604 	.word	0x08001604

0800136c <_sbrk_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4c06      	ldr	r4, [pc, #24]	; (8001388 <_sbrk_r+0x1c>)
 8001370:	2300      	movs	r3, #0
 8001372:	4605      	mov	r5, r0
 8001374:	4608      	mov	r0, r1
 8001376:	6023      	str	r3, [r4, #0]
 8001378:	f000 f8de 	bl	8001538 <_sbrk>
 800137c:	1c43      	adds	r3, r0, #1
 800137e:	d102      	bne.n	8001386 <_sbrk_r+0x1a>
 8001380:	6823      	ldr	r3, [r4, #0]
 8001382:	b103      	cbz	r3, 8001386 <_sbrk_r+0x1a>
 8001384:	602b      	str	r3, [r5, #0]
 8001386:	bd38      	pop	{r3, r4, r5, pc}
 8001388:	20000090 	.word	0x20000090

0800138c <__sread>:
 800138c:	b510      	push	{r4, lr}
 800138e:	460c      	mov	r4, r1
 8001390:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001394:	f000 f896 	bl	80014c4 <_read_r>
 8001398:	2800      	cmp	r0, #0
 800139a:	bfab      	itete	ge
 800139c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800139e:	89a3      	ldrhlt	r3, [r4, #12]
 80013a0:	181b      	addge	r3, r3, r0
 80013a2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80013a6:	bfac      	ite	ge
 80013a8:	6563      	strge	r3, [r4, #84]	; 0x54
 80013aa:	81a3      	strhlt	r3, [r4, #12]
 80013ac:	bd10      	pop	{r4, pc}

080013ae <__swrite>:
 80013ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013b2:	461f      	mov	r7, r3
 80013b4:	898b      	ldrh	r3, [r1, #12]
 80013b6:	05db      	lsls	r3, r3, #23
 80013b8:	4605      	mov	r5, r0
 80013ba:	460c      	mov	r4, r1
 80013bc:	4616      	mov	r6, r2
 80013be:	d505      	bpl.n	80013cc <__swrite+0x1e>
 80013c0:	2302      	movs	r3, #2
 80013c2:	2200      	movs	r2, #0
 80013c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c8:	f000 f868 	bl	800149c <_lseek_r>
 80013cc:	89a3      	ldrh	r3, [r4, #12]
 80013ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013d6:	81a3      	strh	r3, [r4, #12]
 80013d8:	4632      	mov	r2, r6
 80013da:	463b      	mov	r3, r7
 80013dc:	4628      	mov	r0, r5
 80013de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013e2:	f000 b817 	b.w	8001414 <_write_r>

080013e6 <__sseek>:
 80013e6:	b510      	push	{r4, lr}
 80013e8:	460c      	mov	r4, r1
 80013ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ee:	f000 f855 	bl	800149c <_lseek_r>
 80013f2:	1c43      	adds	r3, r0, #1
 80013f4:	89a3      	ldrh	r3, [r4, #12]
 80013f6:	bf15      	itete	ne
 80013f8:	6560      	strne	r0, [r4, #84]	; 0x54
 80013fa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013fe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001402:	81a3      	strheq	r3, [r4, #12]
 8001404:	bf18      	it	ne
 8001406:	81a3      	strhne	r3, [r4, #12]
 8001408:	bd10      	pop	{r4, pc}

0800140a <__sclose>:
 800140a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800140e:	f000 b813 	b.w	8001438 <_close_r>
	...

08001414 <_write_r>:
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4c07      	ldr	r4, [pc, #28]	; (8001434 <_write_r+0x20>)
 8001418:	4605      	mov	r5, r0
 800141a:	4608      	mov	r0, r1
 800141c:	4611      	mov	r1, r2
 800141e:	2200      	movs	r2, #0
 8001420:	6022      	str	r2, [r4, #0]
 8001422:	461a      	mov	r2, r3
 8001424:	f7fe ffdd 	bl	80003e2 <_write>
 8001428:	1c43      	adds	r3, r0, #1
 800142a:	d102      	bne.n	8001432 <_write_r+0x1e>
 800142c:	6823      	ldr	r3, [r4, #0]
 800142e:	b103      	cbz	r3, 8001432 <_write_r+0x1e>
 8001430:	602b      	str	r3, [r5, #0]
 8001432:	bd38      	pop	{r3, r4, r5, pc}
 8001434:	20000090 	.word	0x20000090

08001438 <_close_r>:
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4c06      	ldr	r4, [pc, #24]	; (8001454 <_close_r+0x1c>)
 800143c:	2300      	movs	r3, #0
 800143e:	4605      	mov	r5, r0
 8001440:	4608      	mov	r0, r1
 8001442:	6023      	str	r3, [r4, #0]
 8001444:	f000 f850 	bl	80014e8 <_close>
 8001448:	1c43      	adds	r3, r0, #1
 800144a:	d102      	bne.n	8001452 <_close_r+0x1a>
 800144c:	6823      	ldr	r3, [r4, #0]
 800144e:	b103      	cbz	r3, 8001452 <_close_r+0x1a>
 8001450:	602b      	str	r3, [r5, #0]
 8001452:	bd38      	pop	{r3, r4, r5, pc}
 8001454:	20000090 	.word	0x20000090

08001458 <_fstat_r>:
 8001458:	b538      	push	{r3, r4, r5, lr}
 800145a:	4c07      	ldr	r4, [pc, #28]	; (8001478 <_fstat_r+0x20>)
 800145c:	2300      	movs	r3, #0
 800145e:	4605      	mov	r5, r0
 8001460:	4608      	mov	r0, r1
 8001462:	4611      	mov	r1, r2
 8001464:	6023      	str	r3, [r4, #0]
 8001466:	f000 f847 	bl	80014f8 <_fstat>
 800146a:	1c43      	adds	r3, r0, #1
 800146c:	d102      	bne.n	8001474 <_fstat_r+0x1c>
 800146e:	6823      	ldr	r3, [r4, #0]
 8001470:	b103      	cbz	r3, 8001474 <_fstat_r+0x1c>
 8001472:	602b      	str	r3, [r5, #0]
 8001474:	bd38      	pop	{r3, r4, r5, pc}
 8001476:	bf00      	nop
 8001478:	20000090 	.word	0x20000090

0800147c <_isatty_r>:
 800147c:	b538      	push	{r3, r4, r5, lr}
 800147e:	4c06      	ldr	r4, [pc, #24]	; (8001498 <_isatty_r+0x1c>)
 8001480:	2300      	movs	r3, #0
 8001482:	4605      	mov	r5, r0
 8001484:	4608      	mov	r0, r1
 8001486:	6023      	str	r3, [r4, #0]
 8001488:	f000 f83e 	bl	8001508 <_isatty>
 800148c:	1c43      	adds	r3, r0, #1
 800148e:	d102      	bne.n	8001496 <_isatty_r+0x1a>
 8001490:	6823      	ldr	r3, [r4, #0]
 8001492:	b103      	cbz	r3, 8001496 <_isatty_r+0x1a>
 8001494:	602b      	str	r3, [r5, #0]
 8001496:	bd38      	pop	{r3, r4, r5, pc}
 8001498:	20000090 	.word	0x20000090

0800149c <_lseek_r>:
 800149c:	b538      	push	{r3, r4, r5, lr}
 800149e:	4c07      	ldr	r4, [pc, #28]	; (80014bc <_lseek_r+0x20>)
 80014a0:	4605      	mov	r5, r0
 80014a2:	4608      	mov	r0, r1
 80014a4:	4611      	mov	r1, r2
 80014a6:	2200      	movs	r2, #0
 80014a8:	6022      	str	r2, [r4, #0]
 80014aa:	461a      	mov	r2, r3
 80014ac:	f000 f834 	bl	8001518 <_lseek>
 80014b0:	1c43      	adds	r3, r0, #1
 80014b2:	d102      	bne.n	80014ba <_lseek_r+0x1e>
 80014b4:	6823      	ldr	r3, [r4, #0]
 80014b6:	b103      	cbz	r3, 80014ba <_lseek_r+0x1e>
 80014b8:	602b      	str	r3, [r5, #0]
 80014ba:	bd38      	pop	{r3, r4, r5, pc}
 80014bc:	20000090 	.word	0x20000090

080014c0 <__malloc_lock>:
 80014c0:	4770      	bx	lr

080014c2 <__malloc_unlock>:
 80014c2:	4770      	bx	lr

080014c4 <_read_r>:
 80014c4:	b538      	push	{r3, r4, r5, lr}
 80014c6:	4c07      	ldr	r4, [pc, #28]	; (80014e4 <_read_r+0x20>)
 80014c8:	4605      	mov	r5, r0
 80014ca:	4608      	mov	r0, r1
 80014cc:	4611      	mov	r1, r2
 80014ce:	2200      	movs	r2, #0
 80014d0:	6022      	str	r2, [r4, #0]
 80014d2:	461a      	mov	r2, r3
 80014d4:	f000 f828 	bl	8001528 <_read>
 80014d8:	1c43      	adds	r3, r0, #1
 80014da:	d102      	bne.n	80014e2 <_read_r+0x1e>
 80014dc:	6823      	ldr	r3, [r4, #0]
 80014de:	b103      	cbz	r3, 80014e2 <_read_r+0x1e>
 80014e0:	602b      	str	r3, [r5, #0]
 80014e2:	bd38      	pop	{r3, r4, r5, pc}
 80014e4:	20000090 	.word	0x20000090

080014e8 <_close>:
 80014e8:	4b02      	ldr	r3, [pc, #8]	; (80014f4 <_close+0xc>)
 80014ea:	2258      	movs	r2, #88	; 0x58
 80014ec:	601a      	str	r2, [r3, #0]
 80014ee:	f04f 30ff 	mov.w	r0, #4294967295
 80014f2:	4770      	bx	lr
 80014f4:	20000090 	.word	0x20000090

080014f8 <_fstat>:
 80014f8:	4b02      	ldr	r3, [pc, #8]	; (8001504 <_fstat+0xc>)
 80014fa:	2258      	movs	r2, #88	; 0x58
 80014fc:	601a      	str	r2, [r3, #0]
 80014fe:	f04f 30ff 	mov.w	r0, #4294967295
 8001502:	4770      	bx	lr
 8001504:	20000090 	.word	0x20000090

08001508 <_isatty>:
 8001508:	4b02      	ldr	r3, [pc, #8]	; (8001514 <_isatty+0xc>)
 800150a:	2258      	movs	r2, #88	; 0x58
 800150c:	601a      	str	r2, [r3, #0]
 800150e:	2000      	movs	r0, #0
 8001510:	4770      	bx	lr
 8001512:	bf00      	nop
 8001514:	20000090 	.word	0x20000090

08001518 <_lseek>:
 8001518:	4b02      	ldr	r3, [pc, #8]	; (8001524 <_lseek+0xc>)
 800151a:	2258      	movs	r2, #88	; 0x58
 800151c:	601a      	str	r2, [r3, #0]
 800151e:	f04f 30ff 	mov.w	r0, #4294967295
 8001522:	4770      	bx	lr
 8001524:	20000090 	.word	0x20000090

08001528 <_read>:
 8001528:	4b02      	ldr	r3, [pc, #8]	; (8001534 <_read+0xc>)
 800152a:	2258      	movs	r2, #88	; 0x58
 800152c:	601a      	str	r2, [r3, #0]
 800152e:	f04f 30ff 	mov.w	r0, #4294967295
 8001532:	4770      	bx	lr
 8001534:	20000090 	.word	0x20000090

08001538 <_sbrk>:
 8001538:	4b04      	ldr	r3, [pc, #16]	; (800154c <_sbrk+0x14>)
 800153a:	6819      	ldr	r1, [r3, #0]
 800153c:	4602      	mov	r2, r0
 800153e:	b909      	cbnz	r1, 8001544 <_sbrk+0xc>
 8001540:	4903      	ldr	r1, [pc, #12]	; (8001550 <_sbrk+0x18>)
 8001542:	6019      	str	r1, [r3, #0]
 8001544:	6818      	ldr	r0, [r3, #0]
 8001546:	4402      	add	r2, r0
 8001548:	601a      	str	r2, [r3, #0]
 800154a:	4770      	bx	lr
 800154c:	2000008c 	.word	0x2000008c
 8001550:	20000098 	.word	0x20000098

08001554 <_init>:
 8001554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001556:	bf00      	nop
 8001558:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800155a:	bc08      	pop	{r3}
 800155c:	469e      	mov	lr, r3
 800155e:	4770      	bx	lr

08001560 <_fini>:
 8001560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001562:	bf00      	nop
 8001564:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001566:	bc08      	pop	{r3}
 8001568:	469e      	mov	lr, r3
 800156a:	4770      	bx	lr
